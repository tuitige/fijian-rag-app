{"ast":null,"code":"import { __assign, __awaiter, __generator, __read } from \"tslib\";\nimport { HttpRequest as __HttpRequest } from \"@aws-sdk/protocol-http\";\nimport { decorateServiceException as __decorateServiceException, expectInt32 as __expectInt32, expectNonNull as __expectNonNull, expectObject as __expectObject, expectString as __expectString, limitedParseDouble as __limitedParseDouble, map as __map, resolvedPath as __resolvedPath, throwDefaultError } from \"@aws-sdk/smithy-client\";\nimport { LexRuntimeV2ServiceException as __BaseException } from \"../models/LexRuntimeV2ServiceException\";\nimport { AccessDeniedException, BadGatewayException, ConflictException, DependencyFailedException, InternalServerException, ResourceNotFoundException, StartConversationRequestEventStream, ThrottlingException, ValidationException } from \"../models/models_0\";\nexport var serializeAws_restJson1DeleteSessionCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, body;\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          return [4, context.endpoint()];\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n          headers = {};\n          resolvedPath = \"\".concat((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/bots/{botId}/botAliases/{botAliasId}/botLocales/{localeId}/sessions/{sessionId}\";\n          resolvedPath = __resolvedPath(resolvedPath, input, \"botId\", function () {\n            return input.botId;\n          }, \"{botId}\", false);\n          resolvedPath = __resolvedPath(resolvedPath, input, \"botAliasId\", function () {\n            return input.botAliasId;\n          }, \"{botAliasId}\", false);\n          resolvedPath = __resolvedPath(resolvedPath, input, \"localeId\", function () {\n            return input.localeId;\n          }, \"{localeId}\", false);\n          resolvedPath = __resolvedPath(resolvedPath, input, \"sessionId\", function () {\n            return input.sessionId;\n          }, \"{sessionId}\", false);\n          return [2, new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"DELETE\",\n            headers: headers,\n            path: resolvedPath,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restJson1GetSessionCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, body;\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          return [4, context.endpoint()];\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n          headers = {};\n          resolvedPath = \"\".concat((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/bots/{botId}/botAliases/{botAliasId}/botLocales/{localeId}/sessions/{sessionId}\";\n          resolvedPath = __resolvedPath(resolvedPath, input, \"botId\", function () {\n            return input.botId;\n          }, \"{botId}\", false);\n          resolvedPath = __resolvedPath(resolvedPath, input, \"botAliasId\", function () {\n            return input.botAliasId;\n          }, \"{botAliasId}\", false);\n          resolvedPath = __resolvedPath(resolvedPath, input, \"localeId\", function () {\n            return input.localeId;\n          }, \"{localeId}\", false);\n          resolvedPath = __resolvedPath(resolvedPath, input, \"sessionId\", function () {\n            return input.sessionId;\n          }, \"{sessionId}\", false);\n          return [2, new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"GET\",\n            headers: headers,\n            path: resolvedPath,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restJson1PutSessionCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, body;\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          return [4, context.endpoint()];\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n          headers = map({}, isSerializableHeaderValue, {\n            \"content-type\": \"application/json\",\n            responsecontenttype: input.responseContentType\n          });\n          resolvedPath = \"\".concat((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/bots/{botId}/botAliases/{botAliasId}/botLocales/{localeId}/sessions/{sessionId}\";\n          resolvedPath = __resolvedPath(resolvedPath, input, \"botId\", function () {\n            return input.botId;\n          }, \"{botId}\", false);\n          resolvedPath = __resolvedPath(resolvedPath, input, \"botAliasId\", function () {\n            return input.botAliasId;\n          }, \"{botAliasId}\", false);\n          resolvedPath = __resolvedPath(resolvedPath, input, \"localeId\", function () {\n            return input.localeId;\n          }, \"{localeId}\", false);\n          resolvedPath = __resolvedPath(resolvedPath, input, \"sessionId\", function () {\n            return input.sessionId;\n          }, \"{sessionId}\", false);\n          body = JSON.stringify(__assign(__assign(__assign({}, input.messages != null && {\n            messages: serializeAws_restJson1Messages(input.messages, context)\n          }), input.requestAttributes != null && {\n            requestAttributes: serializeAws_restJson1StringMap(input.requestAttributes, context)\n          }), input.sessionState != null && {\n            sessionState: serializeAws_restJson1SessionState(input.sessionState, context)\n          }));\n          return [2, new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"POST\",\n            headers: headers,\n            path: resolvedPath,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restJson1RecognizeTextCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, body;\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          return [4, context.endpoint()];\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n          headers = {\n            \"content-type\": \"application/json\"\n          };\n          resolvedPath = \"\".concat((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/bots/{botId}/botAliases/{botAliasId}/botLocales/{localeId}/sessions/{sessionId}/text\";\n          resolvedPath = __resolvedPath(resolvedPath, input, \"botId\", function () {\n            return input.botId;\n          }, \"{botId}\", false);\n          resolvedPath = __resolvedPath(resolvedPath, input, \"botAliasId\", function () {\n            return input.botAliasId;\n          }, \"{botAliasId}\", false);\n          resolvedPath = __resolvedPath(resolvedPath, input, \"localeId\", function () {\n            return input.localeId;\n          }, \"{localeId}\", false);\n          resolvedPath = __resolvedPath(resolvedPath, input, \"sessionId\", function () {\n            return input.sessionId;\n          }, \"{sessionId}\", false);\n          body = JSON.stringify(__assign(__assign(__assign({}, input.requestAttributes != null && {\n            requestAttributes: serializeAws_restJson1StringMap(input.requestAttributes, context)\n          }), input.sessionState != null && {\n            sessionState: serializeAws_restJson1SessionState(input.sessionState, context)\n          }), input.text != null && {\n            text: input.text\n          }));\n          return [2, new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"POST\",\n            headers: headers,\n            path: resolvedPath,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restJson1RecognizeUtteranceCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, body;\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          return [4, context.endpoint()];\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n          headers = map({}, isSerializableHeaderValue, {\n            \"x-amz-content-sha256\": \"UNSIGNED-PAYLOAD\",\n            \"content-type\": input.requestContentType || \"application/octet-stream\",\n            \"x-amz-lex-session-state\": input.sessionState,\n            \"x-amz-lex-request-attributes\": input.requestAttributes,\n            \"response-content-type\": input.responseContentType\n          });\n          resolvedPath = \"\".concat((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/bots/{botId}/botAliases/{botAliasId}/botLocales/{localeId}/sessions/{sessionId}/utterance\";\n          resolvedPath = __resolvedPath(resolvedPath, input, \"botId\", function () {\n            return input.botId;\n          }, \"{botId}\", false);\n          resolvedPath = __resolvedPath(resolvedPath, input, \"botAliasId\", function () {\n            return input.botAliasId;\n          }, \"{botAliasId}\", false);\n          resolvedPath = __resolvedPath(resolvedPath, input, \"localeId\", function () {\n            return input.localeId;\n          }, \"{localeId}\", false);\n          resolvedPath = __resolvedPath(resolvedPath, input, \"sessionId\", function () {\n            return input.sessionId;\n          }, \"{sessionId}\", false);\n          if (input.inputStream !== undefined) {\n            body = input.inputStream;\n          }\n          return [2, new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"POST\",\n            headers: headers,\n            path: resolvedPath,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restJson1StartConversationCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, body;\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          return [4, context.endpoint()];\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n          headers = map({}, isSerializableHeaderValue, {\n            \"x-amz-lex-conversation-mode\": input.conversationMode\n          });\n          resolvedPath = \"\".concat((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/bots/{botId}/botAliases/{botAliasId}/botLocales/{localeId}/sessions/{sessionId}/conversation\";\n          resolvedPath = __resolvedPath(resolvedPath, input, \"botId\", function () {\n            return input.botId;\n          }, \"{botId}\", false);\n          resolvedPath = __resolvedPath(resolvedPath, input, \"botAliasId\", function () {\n            return input.botAliasId;\n          }, \"{botAliasId}\", false);\n          resolvedPath = __resolvedPath(resolvedPath, input, \"localeId\", function () {\n            return input.localeId;\n          }, \"{localeId}\", false);\n          resolvedPath = __resolvedPath(resolvedPath, input, \"sessionId\", function () {\n            return input.sessionId;\n          }, \"{sessionId}\", false);\n          if (input.requestEventStream !== undefined) {\n            body = serializeAws_restJson1StartConversationRequestEventStream(input.requestEventStream, context);\n          }\n          return [2, new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"POST\",\n            headers: headers,\n            path: resolvedPath,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var deserializeAws_restJson1DeleteSessionCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data, _a, _b;\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2, deserializeAws_restJson1DeleteSessionCommandError(output, context)];\n          }\n          contents = map({\n            $metadata: deserializeMetadata(output)\n          });\n          _a = __expectNonNull;\n          _b = __expectObject;\n          return [4, parseBody(output.body, context)];\n        case 1:\n          data = _a.apply(void 0, [_b.apply(void 0, [_c.sent()]), \"body\"]);\n          if (data.botAliasId != null) {\n            contents.botAliasId = __expectString(data.botAliasId);\n          }\n          if (data.botId != null) {\n            contents.botId = __expectString(data.botId);\n          }\n          if (data.localeId != null) {\n            contents.localeId = __expectString(data.localeId);\n          }\n          if (data.sessionId != null) {\n            contents.sessionId = __expectString(data.sessionId);\n          }\n          return [2, contents];\n      }\n    });\n  });\n};\nvar deserializeAws_restJson1DeleteSessionCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, errorCode, _b, parsedBody;\n    var _c;\n    return __generator(this, function (_d) {\n      switch (_d.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _c = {};\n          return [4, parseErrorBody(output.body, context)];\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_c.body = _d.sent(), _c)]));\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n          switch (_b) {\n            case \"AccessDeniedException\":\n              return [3, 2];\n            case \"com.amazonaws.lexruntimev2#AccessDeniedException\":\n              return [3, 2];\n            case \"ConflictException\":\n              return [3, 4];\n            case \"com.amazonaws.lexruntimev2#ConflictException\":\n              return [3, 4];\n            case \"InternalServerException\":\n              return [3, 6];\n            case \"com.amazonaws.lexruntimev2#InternalServerException\":\n              return [3, 6];\n            case \"ResourceNotFoundException\":\n              return [3, 8];\n            case \"com.amazonaws.lexruntimev2#ResourceNotFoundException\":\n              return [3, 8];\n            case \"ThrottlingException\":\n              return [3, 10];\n            case \"com.amazonaws.lexruntimev2#ThrottlingException\":\n              return [3, 10];\n            case \"ValidationException\":\n              return [3, 12];\n            case \"com.amazonaws.lexruntimev2#ValidationException\":\n              return [3, 12];\n          }\n          return [3, 14];\n        case 2:\n          return [4, deserializeAws_restJson1AccessDeniedExceptionResponse(parsedOutput, context)];\n        case 3:\n          throw _d.sent();\n        case 4:\n          return [4, deserializeAws_restJson1ConflictExceptionResponse(parsedOutput, context)];\n        case 5:\n          throw _d.sent();\n        case 6:\n          return [4, deserializeAws_restJson1InternalServerExceptionResponse(parsedOutput, context)];\n        case 7:\n          throw _d.sent();\n        case 8:\n          return [4, deserializeAws_restJson1ResourceNotFoundExceptionResponse(parsedOutput, context)];\n        case 9:\n          throw _d.sent();\n        case 10:\n          return [4, deserializeAws_restJson1ThrottlingExceptionResponse(parsedOutput, context)];\n        case 11:\n          throw _d.sent();\n        case 12:\n          return [4, deserializeAws_restJson1ValidationExceptionResponse(parsedOutput, context)];\n        case 13:\n          throw _d.sent();\n        case 14:\n          parsedBody = parsedOutput.body;\n          throwDefaultError({\n            output: output,\n            parsedBody: parsedBody,\n            exceptionCtor: __BaseException,\n            errorCode: errorCode\n          });\n          _d.label = 15;\n        case 15:\n          return [2];\n      }\n    });\n  });\n};\nexport var deserializeAws_restJson1GetSessionCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data, _a, _b;\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2, deserializeAws_restJson1GetSessionCommandError(output, context)];\n          }\n          contents = map({\n            $metadata: deserializeMetadata(output)\n          });\n          _a = __expectNonNull;\n          _b = __expectObject;\n          return [4, parseBody(output.body, context)];\n        case 1:\n          data = _a.apply(void 0, [_b.apply(void 0, [_c.sent()]), \"body\"]);\n          if (data.interpretations != null) {\n            contents.interpretations = deserializeAws_restJson1Interpretations(data.interpretations, context);\n          }\n          if (data.messages != null) {\n            contents.messages = deserializeAws_restJson1Messages(data.messages, context);\n          }\n          if (data.sessionId != null) {\n            contents.sessionId = __expectString(data.sessionId);\n          }\n          if (data.sessionState != null) {\n            contents.sessionState = deserializeAws_restJson1SessionState(data.sessionState, context);\n          }\n          return [2, contents];\n      }\n    });\n  });\n};\nvar deserializeAws_restJson1GetSessionCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, errorCode, _b, parsedBody;\n    var _c;\n    return __generator(this, function (_d) {\n      switch (_d.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _c = {};\n          return [4, parseErrorBody(output.body, context)];\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_c.body = _d.sent(), _c)]));\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n          switch (_b) {\n            case \"AccessDeniedException\":\n              return [3, 2];\n            case \"com.amazonaws.lexruntimev2#AccessDeniedException\":\n              return [3, 2];\n            case \"InternalServerException\":\n              return [3, 4];\n            case \"com.amazonaws.lexruntimev2#InternalServerException\":\n              return [3, 4];\n            case \"ResourceNotFoundException\":\n              return [3, 6];\n            case \"com.amazonaws.lexruntimev2#ResourceNotFoundException\":\n              return [3, 6];\n            case \"ThrottlingException\":\n              return [3, 8];\n            case \"com.amazonaws.lexruntimev2#ThrottlingException\":\n              return [3, 8];\n            case \"ValidationException\":\n              return [3, 10];\n            case \"com.amazonaws.lexruntimev2#ValidationException\":\n              return [3, 10];\n          }\n          return [3, 12];\n        case 2:\n          return [4, deserializeAws_restJson1AccessDeniedExceptionResponse(parsedOutput, context)];\n        case 3:\n          throw _d.sent();\n        case 4:\n          return [4, deserializeAws_restJson1InternalServerExceptionResponse(parsedOutput, context)];\n        case 5:\n          throw _d.sent();\n        case 6:\n          return [4, deserializeAws_restJson1ResourceNotFoundExceptionResponse(parsedOutput, context)];\n        case 7:\n          throw _d.sent();\n        case 8:\n          return [4, deserializeAws_restJson1ThrottlingExceptionResponse(parsedOutput, context)];\n        case 9:\n          throw _d.sent();\n        case 10:\n          return [4, deserializeAws_restJson1ValidationExceptionResponse(parsedOutput, context)];\n        case 11:\n          throw _d.sent();\n        case 12:\n          parsedBody = parsedOutput.body;\n          throwDefaultError({\n            output: output,\n            parsedBody: parsedBody,\n            exceptionCtor: __BaseException,\n            errorCode: errorCode\n          });\n          _d.label = 13;\n        case 13:\n          return [2];\n      }\n    });\n  });\n};\nexport var deserializeAws_restJson1PutSessionCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return [2, deserializeAws_restJson1PutSessionCommandError(output, context)];\n      }\n      contents = map({\n        $metadata: deserializeMetadata(output),\n        contentType: [, output.headers[\"content-type\"]],\n        messages: [, output.headers[\"x-amz-lex-messages\"]],\n        sessionState: [, output.headers[\"x-amz-lex-session-state\"]],\n        requestAttributes: [, output.headers[\"x-amz-lex-request-attributes\"]],\n        sessionId: [, output.headers[\"x-amz-lex-session-id\"]]\n      });\n      data = output.body;\n      contents.audioStream = data;\n      return [2, contents];\n    });\n  });\n};\nvar deserializeAws_restJson1PutSessionCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, errorCode, _b, parsedBody;\n    var _c;\n    return __generator(this, function (_d) {\n      switch (_d.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _c = {};\n          return [4, parseErrorBody(output.body, context)];\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_c.body = _d.sent(), _c)]));\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n          switch (_b) {\n            case \"AccessDeniedException\":\n              return [3, 2];\n            case \"com.amazonaws.lexruntimev2#AccessDeniedException\":\n              return [3, 2];\n            case \"BadGatewayException\":\n              return [3, 4];\n            case \"com.amazonaws.lexruntimev2#BadGatewayException\":\n              return [3, 4];\n            case \"ConflictException\":\n              return [3, 6];\n            case \"com.amazonaws.lexruntimev2#ConflictException\":\n              return [3, 6];\n            case \"DependencyFailedException\":\n              return [3, 8];\n            case \"com.amazonaws.lexruntimev2#DependencyFailedException\":\n              return [3, 8];\n            case \"InternalServerException\":\n              return [3, 10];\n            case \"com.amazonaws.lexruntimev2#InternalServerException\":\n              return [3, 10];\n            case \"ResourceNotFoundException\":\n              return [3, 12];\n            case \"com.amazonaws.lexruntimev2#ResourceNotFoundException\":\n              return [3, 12];\n            case \"ThrottlingException\":\n              return [3, 14];\n            case \"com.amazonaws.lexruntimev2#ThrottlingException\":\n              return [3, 14];\n            case \"ValidationException\":\n              return [3, 16];\n            case \"com.amazonaws.lexruntimev2#ValidationException\":\n              return [3, 16];\n          }\n          return [3, 18];\n        case 2:\n          return [4, deserializeAws_restJson1AccessDeniedExceptionResponse(parsedOutput, context)];\n        case 3:\n          throw _d.sent();\n        case 4:\n          return [4, deserializeAws_restJson1BadGatewayExceptionResponse(parsedOutput, context)];\n        case 5:\n          throw _d.sent();\n        case 6:\n          return [4, deserializeAws_restJson1ConflictExceptionResponse(parsedOutput, context)];\n        case 7:\n          throw _d.sent();\n        case 8:\n          return [4, deserializeAws_restJson1DependencyFailedExceptionResponse(parsedOutput, context)];\n        case 9:\n          throw _d.sent();\n        case 10:\n          return [4, deserializeAws_restJson1InternalServerExceptionResponse(parsedOutput, context)];\n        case 11:\n          throw _d.sent();\n        case 12:\n          return [4, deserializeAws_restJson1ResourceNotFoundExceptionResponse(parsedOutput, context)];\n        case 13:\n          throw _d.sent();\n        case 14:\n          return [4, deserializeAws_restJson1ThrottlingExceptionResponse(parsedOutput, context)];\n        case 15:\n          throw _d.sent();\n        case 16:\n          return [4, deserializeAws_restJson1ValidationExceptionResponse(parsedOutput, context)];\n        case 17:\n          throw _d.sent();\n        case 18:\n          parsedBody = parsedOutput.body;\n          throwDefaultError({\n            output: output,\n            parsedBody: parsedBody,\n            exceptionCtor: __BaseException,\n            errorCode: errorCode\n          });\n          _d.label = 19;\n        case 19:\n          return [2];\n      }\n    });\n  });\n};\nexport var deserializeAws_restJson1RecognizeTextCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data, _a, _b;\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2, deserializeAws_restJson1RecognizeTextCommandError(output, context)];\n          }\n          contents = map({\n            $metadata: deserializeMetadata(output)\n          });\n          _a = __expectNonNull;\n          _b = __expectObject;\n          return [4, parseBody(output.body, context)];\n        case 1:\n          data = _a.apply(void 0, [_b.apply(void 0, [_c.sent()]), \"body\"]);\n          if (data.interpretations != null) {\n            contents.interpretations = deserializeAws_restJson1Interpretations(data.interpretations, context);\n          }\n          if (data.messages != null) {\n            contents.messages = deserializeAws_restJson1Messages(data.messages, context);\n          }\n          if (data.requestAttributes != null) {\n            contents.requestAttributes = deserializeAws_restJson1StringMap(data.requestAttributes, context);\n          }\n          if (data.sessionId != null) {\n            contents.sessionId = __expectString(data.sessionId);\n          }\n          if (data.sessionState != null) {\n            contents.sessionState = deserializeAws_restJson1SessionState(data.sessionState, context);\n          }\n          return [2, contents];\n      }\n    });\n  });\n};\nvar deserializeAws_restJson1RecognizeTextCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, errorCode, _b, parsedBody;\n    var _c;\n    return __generator(this, function (_d) {\n      switch (_d.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _c = {};\n          return [4, parseErrorBody(output.body, context)];\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_c.body = _d.sent(), _c)]));\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n          switch (_b) {\n            case \"AccessDeniedException\":\n              return [3, 2];\n            case \"com.amazonaws.lexruntimev2#AccessDeniedException\":\n              return [3, 2];\n            case \"BadGatewayException\":\n              return [3, 4];\n            case \"com.amazonaws.lexruntimev2#BadGatewayException\":\n              return [3, 4];\n            case \"ConflictException\":\n              return [3, 6];\n            case \"com.amazonaws.lexruntimev2#ConflictException\":\n              return [3, 6];\n            case \"DependencyFailedException\":\n              return [3, 8];\n            case \"com.amazonaws.lexruntimev2#DependencyFailedException\":\n              return [3, 8];\n            case \"InternalServerException\":\n              return [3, 10];\n            case \"com.amazonaws.lexruntimev2#InternalServerException\":\n              return [3, 10];\n            case \"ResourceNotFoundException\":\n              return [3, 12];\n            case \"com.amazonaws.lexruntimev2#ResourceNotFoundException\":\n              return [3, 12];\n            case \"ThrottlingException\":\n              return [3, 14];\n            case \"com.amazonaws.lexruntimev2#ThrottlingException\":\n              return [3, 14];\n            case \"ValidationException\":\n              return [3, 16];\n            case \"com.amazonaws.lexruntimev2#ValidationException\":\n              return [3, 16];\n          }\n          return [3, 18];\n        case 2:\n          return [4, deserializeAws_restJson1AccessDeniedExceptionResponse(parsedOutput, context)];\n        case 3:\n          throw _d.sent();\n        case 4:\n          return [4, deserializeAws_restJson1BadGatewayExceptionResponse(parsedOutput, context)];\n        case 5:\n          throw _d.sent();\n        case 6:\n          return [4, deserializeAws_restJson1ConflictExceptionResponse(parsedOutput, context)];\n        case 7:\n          throw _d.sent();\n        case 8:\n          return [4, deserializeAws_restJson1DependencyFailedExceptionResponse(parsedOutput, context)];\n        case 9:\n          throw _d.sent();\n        case 10:\n          return [4, deserializeAws_restJson1InternalServerExceptionResponse(parsedOutput, context)];\n        case 11:\n          throw _d.sent();\n        case 12:\n          return [4, deserializeAws_restJson1ResourceNotFoundExceptionResponse(parsedOutput, context)];\n        case 13:\n          throw _d.sent();\n        case 14:\n          return [4, deserializeAws_restJson1ThrottlingExceptionResponse(parsedOutput, context)];\n        case 15:\n          throw _d.sent();\n        case 16:\n          return [4, deserializeAws_restJson1ValidationExceptionResponse(parsedOutput, context)];\n        case 17:\n          throw _d.sent();\n        case 18:\n          parsedBody = parsedOutput.body;\n          throwDefaultError({\n            output: output,\n            parsedBody: parsedBody,\n            exceptionCtor: __BaseException,\n            errorCode: errorCode\n          });\n          _d.label = 19;\n        case 19:\n          return [2];\n      }\n    });\n  });\n};\nexport var deserializeAws_restJson1RecognizeUtteranceCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return [2, deserializeAws_restJson1RecognizeUtteranceCommandError(output, context)];\n      }\n      contents = map({\n        $metadata: deserializeMetadata(output),\n        inputMode: [, output.headers[\"x-amz-lex-input-mode\"]],\n        contentType: [, output.headers[\"content-type\"]],\n        messages: [, output.headers[\"x-amz-lex-messages\"]],\n        interpretations: [, output.headers[\"x-amz-lex-interpretations\"]],\n        sessionState: [, output.headers[\"x-amz-lex-session-state\"]],\n        requestAttributes: [, output.headers[\"x-amz-lex-request-attributes\"]],\n        sessionId: [, output.headers[\"x-amz-lex-session-id\"]],\n        inputTranscript: [, output.headers[\"x-amz-lex-input-transcript\"]]\n      });\n      data = output.body;\n      contents.audioStream = data;\n      return [2, contents];\n    });\n  });\n};\nvar deserializeAws_restJson1RecognizeUtteranceCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, errorCode, _b, parsedBody;\n    var _c;\n    return __generator(this, function (_d) {\n      switch (_d.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _c = {};\n          return [4, parseErrorBody(output.body, context)];\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_c.body = _d.sent(), _c)]));\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n          switch (_b) {\n            case \"AccessDeniedException\":\n              return [3, 2];\n            case \"com.amazonaws.lexruntimev2#AccessDeniedException\":\n              return [3, 2];\n            case \"BadGatewayException\":\n              return [3, 4];\n            case \"com.amazonaws.lexruntimev2#BadGatewayException\":\n              return [3, 4];\n            case \"ConflictException\":\n              return [3, 6];\n            case \"com.amazonaws.lexruntimev2#ConflictException\":\n              return [3, 6];\n            case \"DependencyFailedException\":\n              return [3, 8];\n            case \"com.amazonaws.lexruntimev2#DependencyFailedException\":\n              return [3, 8];\n            case \"InternalServerException\":\n              return [3, 10];\n            case \"com.amazonaws.lexruntimev2#InternalServerException\":\n              return [3, 10];\n            case \"ResourceNotFoundException\":\n              return [3, 12];\n            case \"com.amazonaws.lexruntimev2#ResourceNotFoundException\":\n              return [3, 12];\n            case \"ThrottlingException\":\n              return [3, 14];\n            case \"com.amazonaws.lexruntimev2#ThrottlingException\":\n              return [3, 14];\n            case \"ValidationException\":\n              return [3, 16];\n            case \"com.amazonaws.lexruntimev2#ValidationException\":\n              return [3, 16];\n          }\n          return [3, 18];\n        case 2:\n          return [4, deserializeAws_restJson1AccessDeniedExceptionResponse(parsedOutput, context)];\n        case 3:\n          throw _d.sent();\n        case 4:\n          return [4, deserializeAws_restJson1BadGatewayExceptionResponse(parsedOutput, context)];\n        case 5:\n          throw _d.sent();\n        case 6:\n          return [4, deserializeAws_restJson1ConflictExceptionResponse(parsedOutput, context)];\n        case 7:\n          throw _d.sent();\n        case 8:\n          return [4, deserializeAws_restJson1DependencyFailedExceptionResponse(parsedOutput, context)];\n        case 9:\n          throw _d.sent();\n        case 10:\n          return [4, deserializeAws_restJson1InternalServerExceptionResponse(parsedOutput, context)];\n        case 11:\n          throw _d.sent();\n        case 12:\n          return [4, deserializeAws_restJson1ResourceNotFoundExceptionResponse(parsedOutput, context)];\n        case 13:\n          throw _d.sent();\n        case 14:\n          return [4, deserializeAws_restJson1ThrottlingExceptionResponse(parsedOutput, context)];\n        case 15:\n          throw _d.sent();\n        case 16:\n          return [4, deserializeAws_restJson1ValidationExceptionResponse(parsedOutput, context)];\n        case 17:\n          throw _d.sent();\n        case 18:\n          parsedBody = parsedOutput.body;\n          throwDefaultError({\n            output: output,\n            parsedBody: parsedBody,\n            exceptionCtor: __BaseException,\n            errorCode: errorCode\n          });\n          _d.label = 19;\n        case 19:\n          return [2];\n      }\n    });\n  });\n};\nexport var deserializeAws_restJson1StartConversationCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return [2, deserializeAws_restJson1StartConversationCommandError(output, context)];\n      }\n      contents = map({\n        $metadata: deserializeMetadata(output)\n      });\n      data = output.body;\n      contents.responseEventStream = deserializeAws_restJson1StartConversationResponseEventStream(data, context);\n      return [2, contents];\n    });\n  });\n};\nvar deserializeAws_restJson1StartConversationCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, errorCode, _b, parsedBody;\n    var _c;\n    return __generator(this, function (_d) {\n      switch (_d.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _c = {};\n          return [4, parseErrorBody(output.body, context)];\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_c.body = _d.sent(), _c)]));\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n          switch (_b) {\n            case \"AccessDeniedException\":\n              return [3, 2];\n            case \"com.amazonaws.lexruntimev2#AccessDeniedException\":\n              return [3, 2];\n            case \"InternalServerException\":\n              return [3, 4];\n            case \"com.amazonaws.lexruntimev2#InternalServerException\":\n              return [3, 4];\n            case \"ThrottlingException\":\n              return [3, 6];\n            case \"com.amazonaws.lexruntimev2#ThrottlingException\":\n              return [3, 6];\n            case \"ValidationException\":\n              return [3, 8];\n            case \"com.amazonaws.lexruntimev2#ValidationException\":\n              return [3, 8];\n          }\n          return [3, 10];\n        case 2:\n          return [4, deserializeAws_restJson1AccessDeniedExceptionResponse(parsedOutput, context)];\n        case 3:\n          throw _d.sent();\n        case 4:\n          return [4, deserializeAws_restJson1InternalServerExceptionResponse(parsedOutput, context)];\n        case 5:\n          throw _d.sent();\n        case 6:\n          return [4, deserializeAws_restJson1ThrottlingExceptionResponse(parsedOutput, context)];\n        case 7:\n          throw _d.sent();\n        case 8:\n          return [4, deserializeAws_restJson1ValidationExceptionResponse(parsedOutput, context)];\n        case 9:\n          throw _d.sent();\n        case 10:\n          parsedBody = parsedOutput.body;\n          throwDefaultError({\n            output: output,\n            parsedBody: parsedBody,\n            exceptionCtor: __BaseException,\n            errorCode: errorCode\n          });\n          _d.label = 11;\n        case 11:\n          return [2];\n      }\n    });\n  });\n};\nvar map = __map;\nvar deserializeAws_restJson1AccessDeniedExceptionResponse = function (parsedOutput, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data, exception;\n    return __generator(this, function (_a) {\n      contents = map({});\n      data = parsedOutput.body;\n      if (data.message != null) {\n        contents.message = __expectString(data.message);\n      }\n      exception = new AccessDeniedException(__assign({\n        $metadata: deserializeMetadata(parsedOutput)\n      }, contents));\n      return [2, __decorateServiceException(exception, parsedOutput.body)];\n    });\n  });\n};\nvar deserializeAws_restJson1BadGatewayExceptionResponse = function (parsedOutput, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data, exception;\n    return __generator(this, function (_a) {\n      contents = map({});\n      data = parsedOutput.body;\n      if (data.message != null) {\n        contents.message = __expectString(data.message);\n      }\n      exception = new BadGatewayException(__assign({\n        $metadata: deserializeMetadata(parsedOutput)\n      }, contents));\n      return [2, __decorateServiceException(exception, parsedOutput.body)];\n    });\n  });\n};\nvar deserializeAws_restJson1ConflictExceptionResponse = function (parsedOutput, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data, exception;\n    return __generator(this, function (_a) {\n      contents = map({});\n      data = parsedOutput.body;\n      if (data.message != null) {\n        contents.message = __expectString(data.message);\n      }\n      exception = new ConflictException(__assign({\n        $metadata: deserializeMetadata(parsedOutput)\n      }, contents));\n      return [2, __decorateServiceException(exception, parsedOutput.body)];\n    });\n  });\n};\nvar deserializeAws_restJson1DependencyFailedExceptionResponse = function (parsedOutput, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data, exception;\n    return __generator(this, function (_a) {\n      contents = map({});\n      data = parsedOutput.body;\n      if (data.message != null) {\n        contents.message = __expectString(data.message);\n      }\n      exception = new DependencyFailedException(__assign({\n        $metadata: deserializeMetadata(parsedOutput)\n      }, contents));\n      return [2, __decorateServiceException(exception, parsedOutput.body)];\n    });\n  });\n};\nvar deserializeAws_restJson1InternalServerExceptionResponse = function (parsedOutput, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data, exception;\n    return __generator(this, function (_a) {\n      contents = map({});\n      data = parsedOutput.body;\n      if (data.message != null) {\n        contents.message = __expectString(data.message);\n      }\n      exception = new InternalServerException(__assign({\n        $metadata: deserializeMetadata(parsedOutput)\n      }, contents));\n      return [2, __decorateServiceException(exception, parsedOutput.body)];\n    });\n  });\n};\nvar deserializeAws_restJson1ResourceNotFoundExceptionResponse = function (parsedOutput, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data, exception;\n    return __generator(this, function (_a) {\n      contents = map({});\n      data = parsedOutput.body;\n      if (data.message != null) {\n        contents.message = __expectString(data.message);\n      }\n      exception = new ResourceNotFoundException(__assign({\n        $metadata: deserializeMetadata(parsedOutput)\n      }, contents));\n      return [2, __decorateServiceException(exception, parsedOutput.body)];\n    });\n  });\n};\nvar deserializeAws_restJson1ThrottlingExceptionResponse = function (parsedOutput, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data, exception;\n    return __generator(this, function (_a) {\n      contents = map({});\n      data = parsedOutput.body;\n      if (data.message != null) {\n        contents.message = __expectString(data.message);\n      }\n      exception = new ThrottlingException(__assign({\n        $metadata: deserializeMetadata(parsedOutput)\n      }, contents));\n      return [2, __decorateServiceException(exception, parsedOutput.body)];\n    });\n  });\n};\nvar deserializeAws_restJson1ValidationExceptionResponse = function (parsedOutput, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data, exception;\n    return __generator(this, function (_a) {\n      contents = map({});\n      data = parsedOutput.body;\n      if (data.message != null) {\n        contents.message = __expectString(data.message);\n      }\n      exception = new ValidationException(__assign({\n        $metadata: deserializeMetadata(parsedOutput)\n      }, contents));\n      return [2, __decorateServiceException(exception, parsedOutput.body)];\n    });\n  });\n};\nvar serializeAws_restJson1StartConversationRequestEventStream = function (input, context) {\n  var eventMarshallingVisitor = function (event) {\n    return StartConversationRequestEventStream.visit(event, {\n      ConfigurationEvent: function (value) {\n        return serializeAws_restJson1ConfigurationEvent_event(value, context);\n      },\n      AudioInputEvent: function (value) {\n        return serializeAws_restJson1AudioInputEvent_event(value, context);\n      },\n      DTMFInputEvent: function (value) {\n        return serializeAws_restJson1DTMFInputEvent_event(value, context);\n      },\n      TextInputEvent: function (value) {\n        return serializeAws_restJson1TextInputEvent_event(value, context);\n      },\n      PlaybackCompletionEvent: function (value) {\n        return serializeAws_restJson1PlaybackCompletionEvent_event(value, context);\n      },\n      DisconnectionEvent: function (value) {\n        return serializeAws_restJson1DisconnectionEvent_event(value, context);\n      },\n      _: function (value) {\n        return value;\n      }\n    });\n  };\n  return context.eventStreamMarshaller.serialize(input, eventMarshallingVisitor);\n};\nvar serializeAws_restJson1AudioInputEvent_event = function (input, context) {\n  var headers = {\n    \":event-type\": {\n      type: \"string\",\n      value: \"AudioInputEvent\"\n    },\n    \":message-type\": {\n      type: \"string\",\n      value: \"event\"\n    },\n    \":content-type\": {\n      type: \"string\",\n      value: \"application/json\"\n    }\n  };\n  var body = new Uint8Array();\n  body = serializeAws_restJson1AudioInputEvent(input, context);\n  body = context.utf8Decoder(JSON.stringify(body));\n  return {\n    headers: headers,\n    body: body\n  };\n};\nvar serializeAws_restJson1ConfigurationEvent_event = function (input, context) {\n  var headers = {\n    \":event-type\": {\n      type: \"string\",\n      value: \"ConfigurationEvent\"\n    },\n    \":message-type\": {\n      type: \"string\",\n      value: \"event\"\n    },\n    \":content-type\": {\n      type: \"string\",\n      value: \"application/json\"\n    }\n  };\n  var body = new Uint8Array();\n  body = serializeAws_restJson1ConfigurationEvent(input, context);\n  body = context.utf8Decoder(JSON.stringify(body));\n  return {\n    headers: headers,\n    body: body\n  };\n};\nvar serializeAws_restJson1DisconnectionEvent_event = function (input, context) {\n  var headers = {\n    \":event-type\": {\n      type: \"string\",\n      value: \"DisconnectionEvent\"\n    },\n    \":message-type\": {\n      type: \"string\",\n      value: \"event\"\n    },\n    \":content-type\": {\n      type: \"string\",\n      value: \"application/json\"\n    }\n  };\n  var body = new Uint8Array();\n  body = serializeAws_restJson1DisconnectionEvent(input, context);\n  body = context.utf8Decoder(JSON.stringify(body));\n  return {\n    headers: headers,\n    body: body\n  };\n};\nvar serializeAws_restJson1DTMFInputEvent_event = function (input, context) {\n  var headers = {\n    \":event-type\": {\n      type: \"string\",\n      value: \"DTMFInputEvent\"\n    },\n    \":message-type\": {\n      type: \"string\",\n      value: \"event\"\n    },\n    \":content-type\": {\n      type: \"string\",\n      value: \"application/json\"\n    }\n  };\n  var body = new Uint8Array();\n  body = serializeAws_restJson1DTMFInputEvent(input, context);\n  body = context.utf8Decoder(JSON.stringify(body));\n  return {\n    headers: headers,\n    body: body\n  };\n};\nvar serializeAws_restJson1PlaybackCompletionEvent_event = function (input, context) {\n  var headers = {\n    \":event-type\": {\n      type: \"string\",\n      value: \"PlaybackCompletionEvent\"\n    },\n    \":message-type\": {\n      type: \"string\",\n      value: \"event\"\n    },\n    \":content-type\": {\n      type: \"string\",\n      value: \"application/json\"\n    }\n  };\n  var body = new Uint8Array();\n  body = serializeAws_restJson1PlaybackCompletionEvent(input, context);\n  body = context.utf8Decoder(JSON.stringify(body));\n  return {\n    headers: headers,\n    body: body\n  };\n};\nvar serializeAws_restJson1TextInputEvent_event = function (input, context) {\n  var headers = {\n    \":event-type\": {\n      type: \"string\",\n      value: \"TextInputEvent\"\n    },\n    \":message-type\": {\n      type: \"string\",\n      value: \"event\"\n    },\n    \":content-type\": {\n      type: \"string\",\n      value: \"application/json\"\n    }\n  };\n  var body = new Uint8Array();\n  body = serializeAws_restJson1TextInputEvent(input, context);\n  body = context.utf8Decoder(JSON.stringify(body));\n  return {\n    headers: headers,\n    body: body\n  };\n};\nvar deserializeAws_restJson1StartConversationResponseEventStream = function (output, context) {\n  return context.eventStreamMarshaller.deserialize(output, function (event) {\n    return __awaiter(void 0, void 0, void 0, function () {\n      var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, _o, _p;\n      return __generator(this, function (_q) {\n        switch (_q.label) {\n          case 0:\n            if (!(event[\"PlaybackInterruptionEvent\"] != null)) return [3, 2];\n            _a = {};\n            return [4, deserializeAws_restJson1PlaybackInterruptionEvent_event(event[\"PlaybackInterruptionEvent\"], context)];\n          case 1:\n            return [2, (_a.PlaybackInterruptionEvent = _q.sent(), _a)];\n          case 2:\n            if (!(event[\"TranscriptEvent\"] != null)) return [3, 4];\n            _b = {};\n            return [4, deserializeAws_restJson1TranscriptEvent_event(event[\"TranscriptEvent\"], context)];\n          case 3:\n            return [2, (_b.TranscriptEvent = _q.sent(), _b)];\n          case 4:\n            if (!(event[\"IntentResultEvent\"] != null)) return [3, 6];\n            _c = {};\n            return [4, deserializeAws_restJson1IntentResultEvent_event(event[\"IntentResultEvent\"], context)];\n          case 5:\n            return [2, (_c.IntentResultEvent = _q.sent(), _c)];\n          case 6:\n            if (!(event[\"TextResponseEvent\"] != null)) return [3, 8];\n            _d = {};\n            return [4, deserializeAws_restJson1TextResponseEvent_event(event[\"TextResponseEvent\"], context)];\n          case 7:\n            return [2, (_d.TextResponseEvent = _q.sent(), _d)];\n          case 8:\n            if (!(event[\"AudioResponseEvent\"] != null)) return [3, 10];\n            _e = {};\n            return [4, deserializeAws_restJson1AudioResponseEvent_event(event[\"AudioResponseEvent\"], context)];\n          case 9:\n            return [2, (_e.AudioResponseEvent = _q.sent(), _e)];\n          case 10:\n            if (!(event[\"HeartbeatEvent\"] != null)) return [3, 12];\n            _f = {};\n            return [4, deserializeAws_restJson1HeartbeatEvent_event(event[\"HeartbeatEvent\"], context)];\n          case 11:\n            return [2, (_f.HeartbeatEvent = _q.sent(), _f)];\n          case 12:\n            if (!(event[\"AccessDeniedException\"] != null)) return [3, 14];\n            _g = {};\n            return [4, deserializeAws_restJson1AccessDeniedException_event(event[\"AccessDeniedException\"], context)];\n          case 13:\n            return [2, (_g.AccessDeniedException = _q.sent(), _g)];\n          case 14:\n            if (!(event[\"ResourceNotFoundException\"] != null)) return [3, 16];\n            _h = {};\n            return [4, deserializeAws_restJson1ResourceNotFoundException_event(event[\"ResourceNotFoundException\"], context)];\n          case 15:\n            return [2, (_h.ResourceNotFoundException = _q.sent(), _h)];\n          case 16:\n            if (!(event[\"ValidationException\"] != null)) return [3, 18];\n            _j = {};\n            return [4, deserializeAws_restJson1ValidationException_event(event[\"ValidationException\"], context)];\n          case 17:\n            return [2, (_j.ValidationException = _q.sent(), _j)];\n          case 18:\n            if (!(event[\"ThrottlingException\"] != null)) return [3, 20];\n            _k = {};\n            return [4, deserializeAws_restJson1ThrottlingException_event(event[\"ThrottlingException\"], context)];\n          case 19:\n            return [2, (_k.ThrottlingException = _q.sent(), _k)];\n          case 20:\n            if (!(event[\"InternalServerException\"] != null)) return [3, 22];\n            _l = {};\n            return [4, deserializeAws_restJson1InternalServerException_event(event[\"InternalServerException\"], context)];\n          case 21:\n            return [2, (_l.InternalServerException = _q.sent(), _l)];\n          case 22:\n            if (!(event[\"ConflictException\"] != null)) return [3, 24];\n            _m = {};\n            return [4, deserializeAws_restJson1ConflictException_event(event[\"ConflictException\"], context)];\n          case 23:\n            return [2, (_m.ConflictException = _q.sent(), _m)];\n          case 24:\n            if (!(event[\"DependencyFailedException\"] != null)) return [3, 26];\n            _o = {};\n            return [4, deserializeAws_restJson1DependencyFailedException_event(event[\"DependencyFailedException\"], context)];\n          case 25:\n            return [2, (_o.DependencyFailedException = _q.sent(), _o)];\n          case 26:\n            if (!(event[\"BadGatewayException\"] != null)) return [3, 28];\n            _p = {};\n            return [4, deserializeAws_restJson1BadGatewayException_event(event[\"BadGatewayException\"], context)];\n          case 27:\n            return [2, (_p.BadGatewayException = _q.sent(), _p)];\n          case 28:\n            return [2, {\n              $unknown: output\n            }];\n        }\n      });\n    });\n  });\n};\nvar deserializeAws_restJson1AccessDeniedException_event = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a;\n    var _b;\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4, parseBody(output.body, context)];\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          return [2, deserializeAws_restJson1AccessDeniedExceptionResponse(parsedOutput, context)];\n      }\n    });\n  });\n};\nvar deserializeAws_restJson1AudioResponseEvent_event = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          contents = {};\n          return [4, parseBody(output.body, context)];\n        case 1:\n          data = _a.sent();\n          Object.assign(contents, deserializeAws_restJson1AudioResponseEvent(data, context));\n          return [2, contents];\n      }\n    });\n  });\n};\nvar deserializeAws_restJson1BadGatewayException_event = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a;\n    var _b;\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4, parseBody(output.body, context)];\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          return [2, deserializeAws_restJson1BadGatewayExceptionResponse(parsedOutput, context)];\n      }\n    });\n  });\n};\nvar deserializeAws_restJson1ConflictException_event = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a;\n    var _b;\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4, parseBody(output.body, context)];\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          return [2, deserializeAws_restJson1ConflictExceptionResponse(parsedOutput, context)];\n      }\n    });\n  });\n};\nvar deserializeAws_restJson1DependencyFailedException_event = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a;\n    var _b;\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4, parseBody(output.body, context)];\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          return [2, deserializeAws_restJson1DependencyFailedExceptionResponse(parsedOutput, context)];\n      }\n    });\n  });\n};\nvar deserializeAws_restJson1HeartbeatEvent_event = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          contents = {};\n          return [4, parseBody(output.body, context)];\n        case 1:\n          data = _a.sent();\n          Object.assign(contents, deserializeAws_restJson1HeartbeatEvent(data, context));\n          return [2, contents];\n      }\n    });\n  });\n};\nvar deserializeAws_restJson1IntentResultEvent_event = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          contents = {};\n          return [4, parseBody(output.body, context)];\n        case 1:\n          data = _a.sent();\n          Object.assign(contents, deserializeAws_restJson1IntentResultEvent(data, context));\n          return [2, contents];\n      }\n    });\n  });\n};\nvar deserializeAws_restJson1InternalServerException_event = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a;\n    var _b;\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4, parseBody(output.body, context)];\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          return [2, deserializeAws_restJson1InternalServerExceptionResponse(parsedOutput, context)];\n      }\n    });\n  });\n};\nvar deserializeAws_restJson1PlaybackInterruptionEvent_event = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          contents = {};\n          return [4, parseBody(output.body, context)];\n        case 1:\n          data = _a.sent();\n          Object.assign(contents, deserializeAws_restJson1PlaybackInterruptionEvent(data, context));\n          return [2, contents];\n      }\n    });\n  });\n};\nvar deserializeAws_restJson1ResourceNotFoundException_event = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a;\n    var _b;\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4, parseBody(output.body, context)];\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          return [2, deserializeAws_restJson1ResourceNotFoundExceptionResponse(parsedOutput, context)];\n      }\n    });\n  });\n};\nvar deserializeAws_restJson1TextResponseEvent_event = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          contents = {};\n          return [4, parseBody(output.body, context)];\n        case 1:\n          data = _a.sent();\n          Object.assign(contents, deserializeAws_restJson1TextResponseEvent(data, context));\n          return [2, contents];\n      }\n    });\n  });\n};\nvar deserializeAws_restJson1ThrottlingException_event = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a;\n    var _b;\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4, parseBody(output.body, context)];\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          return [2, deserializeAws_restJson1ThrottlingExceptionResponse(parsedOutput, context)];\n      }\n    });\n  });\n};\nvar deserializeAws_restJson1TranscriptEvent_event = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          contents = {};\n          return [4, parseBody(output.body, context)];\n        case 1:\n          data = _a.sent();\n          Object.assign(contents, deserializeAws_restJson1TranscriptEvent(data, context));\n          return [2, contents];\n      }\n    });\n  });\n};\nvar deserializeAws_restJson1ValidationException_event = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a;\n    var _b;\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4, parseBody(output.body, context)];\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          return [2, deserializeAws_restJson1ValidationExceptionResponse(parsedOutput, context)];\n      }\n    });\n  });\n};\nvar serializeAws_restJson1ActiveContext = function (input, context) {\n  return __assign(__assign(__assign({}, input.contextAttributes != null && {\n    contextAttributes: serializeAws_restJson1ActiveContextParametersMap(input.contextAttributes, context)\n  }), input.name != null && {\n    name: input.name\n  }), input.timeToLive != null && {\n    timeToLive: serializeAws_restJson1ActiveContextTimeToLive(input.timeToLive, context)\n  });\n};\nvar serializeAws_restJson1ActiveContextParametersMap = function (input, context) {\n  return Object.entries(input).reduce(function (acc, _a) {\n    var _b;\n    var _c = __read(_a, 2),\n      key = _c[0],\n      value = _c[1];\n    if (value === null) {\n      return acc;\n    }\n    return __assign(__assign({}, acc), (_b = {}, _b[key] = value, _b));\n  }, {});\n};\nvar serializeAws_restJson1ActiveContextsList = function (input, context) {\n  return input.filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    return serializeAws_restJson1ActiveContext(entry, context);\n  });\n};\nvar serializeAws_restJson1ActiveContextTimeToLive = function (input, context) {\n  return __assign(__assign({}, input.timeToLiveInSeconds != null && {\n    timeToLiveInSeconds: input.timeToLiveInSeconds\n  }), input.turnsToLive != null && {\n    turnsToLive: input.turnsToLive\n  });\n};\nvar serializeAws_restJson1AudioInputEvent = function (input, context) {\n  return __assign(__assign(__assign(__assign({}, input.audioChunk != null && {\n    audioChunk: context.base64Encoder(input.audioChunk)\n  }), input.clientTimestampMillis != null && {\n    clientTimestampMillis: input.clientTimestampMillis\n  }), input.contentType != null && {\n    contentType: input.contentType\n  }), input.eventId != null && {\n    eventId: input.eventId\n  });\n};\nvar serializeAws_restJson1Button = function (input, context) {\n  return __assign(__assign({}, input.text != null && {\n    text: input.text\n  }), input.value != null && {\n    value: input.value\n  });\n};\nvar serializeAws_restJson1ButtonsList = function (input, context) {\n  return input.filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    return serializeAws_restJson1Button(entry, context);\n  });\n};\nvar serializeAws_restJson1ConfigurationEvent = function (input, context) {\n  return __assign(__assign(__assign(__assign(__assign(__assign(__assign({}, input.clientTimestampMillis != null && {\n    clientTimestampMillis: input.clientTimestampMillis\n  }), input.disablePlayback != null && {\n    disablePlayback: input.disablePlayback\n  }), input.eventId != null && {\n    eventId: input.eventId\n  }), input.requestAttributes != null && {\n    requestAttributes: serializeAws_restJson1StringMap(input.requestAttributes, context)\n  }), input.responseContentType != null && {\n    responseContentType: input.responseContentType\n  }), input.sessionState != null && {\n    sessionState: serializeAws_restJson1SessionState(input.sessionState, context)\n  }), input.welcomeMessages != null && {\n    welcomeMessages: serializeAws_restJson1Messages(input.welcomeMessages, context)\n  });\n};\nvar serializeAws_restJson1DialogAction = function (input, context) {\n  return __assign(__assign(__assign(__assign({}, input.slotElicitationStyle != null && {\n    slotElicitationStyle: input.slotElicitationStyle\n  }), input.slotToElicit != null && {\n    slotToElicit: input.slotToElicit\n  }), input.subSlotToElicit != null && {\n    subSlotToElicit: serializeAws_restJson1ElicitSubSlot(input.subSlotToElicit, context)\n  }), input.type != null && {\n    type: input.type\n  });\n};\nvar serializeAws_restJson1DisconnectionEvent = function (input, context) {\n  return __assign(__assign({}, input.clientTimestampMillis != null && {\n    clientTimestampMillis: input.clientTimestampMillis\n  }), input.eventId != null && {\n    eventId: input.eventId\n  });\n};\nvar serializeAws_restJson1DTMFInputEvent = function (input, context) {\n  return __assign(__assign(__assign({}, input.clientTimestampMillis != null && {\n    clientTimestampMillis: input.clientTimestampMillis\n  }), input.eventId != null && {\n    eventId: input.eventId\n  }), input.inputCharacter != null && {\n    inputCharacter: input.inputCharacter\n  });\n};\nvar serializeAws_restJson1ElicitSubSlot = function (input, context) {\n  return __assign(__assign({}, input.name != null && {\n    name: input.name\n  }), input.subSlotToElicit != null && {\n    subSlotToElicit: serializeAws_restJson1ElicitSubSlot(input.subSlotToElicit, context)\n  });\n};\nvar serializeAws_restJson1ImageResponseCard = function (input, context) {\n  return __assign(__assign(__assign(__assign({}, input.buttons != null && {\n    buttons: serializeAws_restJson1ButtonsList(input.buttons, context)\n  }), input.imageUrl != null && {\n    imageUrl: input.imageUrl\n  }), input.subtitle != null && {\n    subtitle: input.subtitle\n  }), input.title != null && {\n    title: input.title\n  });\n};\nvar serializeAws_restJson1Intent = function (input, context) {\n  return __assign(__assign(__assign(__assign({}, input.confirmationState != null && {\n    confirmationState: input.confirmationState\n  }), input.name != null && {\n    name: input.name\n  }), input.slots != null && {\n    slots: serializeAws_restJson1Slots(input.slots, context)\n  }), input.state != null && {\n    state: input.state\n  });\n};\nvar serializeAws_restJson1Message = function (input, context) {\n  return __assign(__assign(__assign({}, input.content != null && {\n    content: input.content\n  }), input.contentType != null && {\n    contentType: input.contentType\n  }), input.imageResponseCard != null && {\n    imageResponseCard: serializeAws_restJson1ImageResponseCard(input.imageResponseCard, context)\n  });\n};\nvar serializeAws_restJson1Messages = function (input, context) {\n  return input.filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    return serializeAws_restJson1Message(entry, context);\n  });\n};\nvar serializeAws_restJson1PlaybackCompletionEvent = function (input, context) {\n  return __assign(__assign({}, input.clientTimestampMillis != null && {\n    clientTimestampMillis: input.clientTimestampMillis\n  }), input.eventId != null && {\n    eventId: input.eventId\n  });\n};\nvar serializeAws_restJson1RuntimeHintDetails = function (input, context) {\n  return __assign(__assign({}, input.runtimeHintValues != null && {\n    runtimeHintValues: serializeAws_restJson1RuntimeHintValuesList(input.runtimeHintValues, context)\n  }), input.subSlotHints != null && {\n    subSlotHints: serializeAws_restJson1SlotHintsSlotMap(input.subSlotHints, context)\n  });\n};\nvar serializeAws_restJson1RuntimeHints = function (input, context) {\n  return __assign({}, input.slotHints != null && {\n    slotHints: serializeAws_restJson1SlotHintsIntentMap(input.slotHints, context)\n  });\n};\nvar serializeAws_restJson1RuntimeHintValue = function (input, context) {\n  return __assign({}, input.phrase != null && {\n    phrase: input.phrase\n  });\n};\nvar serializeAws_restJson1RuntimeHintValuesList = function (input, context) {\n  return input.filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    return serializeAws_restJson1RuntimeHintValue(entry, context);\n  });\n};\nvar serializeAws_restJson1SessionState = function (input, context) {\n  return __assign(__assign(__assign(__assign(__assign(__assign({}, input.activeContexts != null && {\n    activeContexts: serializeAws_restJson1ActiveContextsList(input.activeContexts, context)\n  }), input.dialogAction != null && {\n    dialogAction: serializeAws_restJson1DialogAction(input.dialogAction, context)\n  }), input.intent != null && {\n    intent: serializeAws_restJson1Intent(input.intent, context)\n  }), input.originatingRequestId != null && {\n    originatingRequestId: input.originatingRequestId\n  }), input.runtimeHints != null && {\n    runtimeHints: serializeAws_restJson1RuntimeHints(input.runtimeHints, context)\n  }), input.sessionAttributes != null && {\n    sessionAttributes: serializeAws_restJson1StringMap(input.sessionAttributes, context)\n  });\n};\nvar serializeAws_restJson1Slot = function (input, context) {\n  return __assign(__assign(__assign(__assign({}, input.shape != null && {\n    shape: input.shape\n  }), input.subSlots != null && {\n    subSlots: serializeAws_restJson1Slots(input.subSlots, context)\n  }), input.value != null && {\n    value: serializeAws_restJson1Value(input.value, context)\n  }), input.values != null && {\n    values: serializeAws_restJson1Values(input.values, context)\n  });\n};\nvar serializeAws_restJson1SlotHintsIntentMap = function (input, context) {\n  return Object.entries(input).reduce(function (acc, _a) {\n    var _b;\n    var _c = __read(_a, 2),\n      key = _c[0],\n      value = _c[1];\n    if (value === null) {\n      return acc;\n    }\n    return __assign(__assign({}, acc), (_b = {}, _b[key] = serializeAws_restJson1SlotHintsSlotMap(value, context), _b));\n  }, {});\n};\nvar serializeAws_restJson1SlotHintsSlotMap = function (input, context) {\n  return Object.entries(input).reduce(function (acc, _a) {\n    var _b;\n    var _c = __read(_a, 2),\n      key = _c[0],\n      value = _c[1];\n    if (value === null) {\n      return acc;\n    }\n    return __assign(__assign({}, acc), (_b = {}, _b[key] = serializeAws_restJson1RuntimeHintDetails(value, context), _b));\n  }, {});\n};\nvar serializeAws_restJson1Slots = function (input, context) {\n  return Object.entries(input).reduce(function (acc, _a) {\n    var _b;\n    var _c = __read(_a, 2),\n      key = _c[0],\n      value = _c[1];\n    if (value === null) {\n      return acc;\n    }\n    return __assign(__assign({}, acc), (_b = {}, _b[key] = serializeAws_restJson1Slot(value, context), _b));\n  }, {});\n};\nvar serializeAws_restJson1StringList = function (input, context) {\n  return input.filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    return entry;\n  });\n};\nvar serializeAws_restJson1StringMap = function (input, context) {\n  return Object.entries(input).reduce(function (acc, _a) {\n    var _b;\n    var _c = __read(_a, 2),\n      key = _c[0],\n      value = _c[1];\n    if (value === null) {\n      return acc;\n    }\n    return __assign(__assign({}, acc), (_b = {}, _b[key] = value, _b));\n  }, {});\n};\nvar serializeAws_restJson1TextInputEvent = function (input, context) {\n  return __assign(__assign(__assign({}, input.clientTimestampMillis != null && {\n    clientTimestampMillis: input.clientTimestampMillis\n  }), input.eventId != null && {\n    eventId: input.eventId\n  }), input.text != null && {\n    text: input.text\n  });\n};\nvar serializeAws_restJson1Value = function (input, context) {\n  return __assign(__assign(__assign({}, input.interpretedValue != null && {\n    interpretedValue: input.interpretedValue\n  }), input.originalValue != null && {\n    originalValue: input.originalValue\n  }), input.resolvedValues != null && {\n    resolvedValues: serializeAws_restJson1StringList(input.resolvedValues, context)\n  });\n};\nvar serializeAws_restJson1Values = function (input, context) {\n  return input.filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    return serializeAws_restJson1Slot(entry, context);\n  });\n};\nvar deserializeAws_restJson1ActiveContext = function (output, context) {\n  return {\n    contextAttributes: output.contextAttributes != null ? deserializeAws_restJson1ActiveContextParametersMap(output.contextAttributes, context) : undefined,\n    name: __expectString(output.name),\n    timeToLive: output.timeToLive != null ? deserializeAws_restJson1ActiveContextTimeToLive(output.timeToLive, context) : undefined\n  };\n};\nvar deserializeAws_restJson1ActiveContextParametersMap = function (output, context) {\n  return Object.entries(output).reduce(function (acc, _a) {\n    var _b;\n    var _c = __read(_a, 2),\n      key = _c[0],\n      value = _c[1];\n    if (value === null) {\n      return acc;\n    }\n    return __assign(__assign({}, acc), (_b = {}, _b[key] = __expectString(value), _b));\n  }, {});\n};\nvar deserializeAws_restJson1ActiveContextsList = function (output, context) {\n  var retVal = (output || []).filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n    return deserializeAws_restJson1ActiveContext(entry, context);\n  });\n  return retVal;\n};\nvar deserializeAws_restJson1ActiveContextTimeToLive = function (output, context) {\n  return {\n    timeToLiveInSeconds: __expectInt32(output.timeToLiveInSeconds),\n    turnsToLive: __expectInt32(output.turnsToLive)\n  };\n};\nvar deserializeAws_restJson1AudioResponseEvent = function (output, context) {\n  return {\n    audioChunk: output.audioChunk != null ? context.base64Decoder(output.audioChunk) : undefined,\n    contentType: __expectString(output.contentType),\n    eventId: __expectString(output.eventId)\n  };\n};\nvar deserializeAws_restJson1Button = function (output, context) {\n  return {\n    text: __expectString(output.text),\n    value: __expectString(output.value)\n  };\n};\nvar deserializeAws_restJson1ButtonsList = function (output, context) {\n  var retVal = (output || []).filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n    return deserializeAws_restJson1Button(entry, context);\n  });\n  return retVal;\n};\nvar deserializeAws_restJson1ConfidenceScore = function (output, context) {\n  return {\n    score: __limitedParseDouble(output.score)\n  };\n};\nvar deserializeAws_restJson1DialogAction = function (output, context) {\n  return {\n    slotElicitationStyle: __expectString(output.slotElicitationStyle),\n    slotToElicit: __expectString(output.slotToElicit),\n    subSlotToElicit: output.subSlotToElicit != null ? deserializeAws_restJson1ElicitSubSlot(output.subSlotToElicit, context) : undefined,\n    type: __expectString(output.type)\n  };\n};\nvar deserializeAws_restJson1ElicitSubSlot = function (output, context) {\n  return {\n    name: __expectString(output.name),\n    subSlotToElicit: output.subSlotToElicit != null ? deserializeAws_restJson1ElicitSubSlot(output.subSlotToElicit, context) : undefined\n  };\n};\nvar deserializeAws_restJson1HeartbeatEvent = function (output, context) {\n  return {\n    eventId: __expectString(output.eventId)\n  };\n};\nvar deserializeAws_restJson1ImageResponseCard = function (output, context) {\n  return {\n    buttons: output.buttons != null ? deserializeAws_restJson1ButtonsList(output.buttons, context) : undefined,\n    imageUrl: __expectString(output.imageUrl),\n    subtitle: __expectString(output.subtitle),\n    title: __expectString(output.title)\n  };\n};\nvar deserializeAws_restJson1Intent = function (output, context) {\n  return {\n    confirmationState: __expectString(output.confirmationState),\n    name: __expectString(output.name),\n    slots: output.slots != null ? deserializeAws_restJson1Slots(output.slots, context) : undefined,\n    state: __expectString(output.state)\n  };\n};\nvar deserializeAws_restJson1IntentResultEvent = function (output, context) {\n  return {\n    eventId: __expectString(output.eventId),\n    inputMode: __expectString(output.inputMode),\n    interpretations: output.interpretations != null ? deserializeAws_restJson1Interpretations(output.interpretations, context) : undefined,\n    requestAttributes: output.requestAttributes != null ? deserializeAws_restJson1StringMap(output.requestAttributes, context) : undefined,\n    sessionId: __expectString(output.sessionId),\n    sessionState: output.sessionState != null ? deserializeAws_restJson1SessionState(output.sessionState, context) : undefined\n  };\n};\nvar deserializeAws_restJson1Interpretation = function (output, context) {\n  return {\n    intent: output.intent != null ? deserializeAws_restJson1Intent(output.intent, context) : undefined,\n    nluConfidence: output.nluConfidence != null ? deserializeAws_restJson1ConfidenceScore(output.nluConfidence, context) : undefined,\n    sentimentResponse: output.sentimentResponse != null ? deserializeAws_restJson1SentimentResponse(output.sentimentResponse, context) : undefined\n  };\n};\nvar deserializeAws_restJson1Interpretations = function (output, context) {\n  var retVal = (output || []).filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n    return deserializeAws_restJson1Interpretation(entry, context);\n  });\n  return retVal;\n};\nvar deserializeAws_restJson1Message = function (output, context) {\n  return {\n    content: __expectString(output.content),\n    contentType: __expectString(output.contentType),\n    imageResponseCard: output.imageResponseCard != null ? deserializeAws_restJson1ImageResponseCard(output.imageResponseCard, context) : undefined\n  };\n};\nvar deserializeAws_restJson1Messages = function (output, context) {\n  var retVal = (output || []).filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n    return deserializeAws_restJson1Message(entry, context);\n  });\n  return retVal;\n};\nvar deserializeAws_restJson1PlaybackInterruptionEvent = function (output, context) {\n  return {\n    causedByEventId: __expectString(output.causedByEventId),\n    eventId: __expectString(output.eventId),\n    eventReason: __expectString(output.eventReason)\n  };\n};\nvar deserializeAws_restJson1RuntimeHintDetails = function (output, context) {\n  return {\n    runtimeHintValues: output.runtimeHintValues != null ? deserializeAws_restJson1RuntimeHintValuesList(output.runtimeHintValues, context) : undefined,\n    subSlotHints: output.subSlotHints != null ? deserializeAws_restJson1SlotHintsSlotMap(output.subSlotHints, context) : undefined\n  };\n};\nvar deserializeAws_restJson1RuntimeHints = function (output, context) {\n  return {\n    slotHints: output.slotHints != null ? deserializeAws_restJson1SlotHintsIntentMap(output.slotHints, context) : undefined\n  };\n};\nvar deserializeAws_restJson1RuntimeHintValue = function (output, context) {\n  return {\n    phrase: __expectString(output.phrase)\n  };\n};\nvar deserializeAws_restJson1RuntimeHintValuesList = function (output, context) {\n  var retVal = (output || []).filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n    return deserializeAws_restJson1RuntimeHintValue(entry, context);\n  });\n  return retVal;\n};\nvar deserializeAws_restJson1SentimentResponse = function (output, context) {\n  return {\n    sentiment: __expectString(output.sentiment),\n    sentimentScore: output.sentimentScore != null ? deserializeAws_restJson1SentimentScore(output.sentimentScore, context) : undefined\n  };\n};\nvar deserializeAws_restJson1SentimentScore = function (output, context) {\n  return {\n    mixed: __limitedParseDouble(output.mixed),\n    negative: __limitedParseDouble(output.negative),\n    neutral: __limitedParseDouble(output.neutral),\n    positive: __limitedParseDouble(output.positive)\n  };\n};\nvar deserializeAws_restJson1SessionState = function (output, context) {\n  return {\n    activeContexts: output.activeContexts != null ? deserializeAws_restJson1ActiveContextsList(output.activeContexts, context) : undefined,\n    dialogAction: output.dialogAction != null ? deserializeAws_restJson1DialogAction(output.dialogAction, context) : undefined,\n    intent: output.intent != null ? deserializeAws_restJson1Intent(output.intent, context) : undefined,\n    originatingRequestId: __expectString(output.originatingRequestId),\n    runtimeHints: output.runtimeHints != null ? deserializeAws_restJson1RuntimeHints(output.runtimeHints, context) : undefined,\n    sessionAttributes: output.sessionAttributes != null ? deserializeAws_restJson1StringMap(output.sessionAttributes, context) : undefined\n  };\n};\nvar deserializeAws_restJson1Slot = function (output, context) {\n  return {\n    shape: __expectString(output.shape),\n    subSlots: output.subSlots != null ? deserializeAws_restJson1Slots(output.subSlots, context) : undefined,\n    value: output.value != null ? deserializeAws_restJson1Value(output.value, context) : undefined,\n    values: output.values != null ? deserializeAws_restJson1Values(output.values, context) : undefined\n  };\n};\nvar deserializeAws_restJson1SlotHintsIntentMap = function (output, context) {\n  return Object.entries(output).reduce(function (acc, _a) {\n    var _b;\n    var _c = __read(_a, 2),\n      key = _c[0],\n      value = _c[1];\n    if (value === null) {\n      return acc;\n    }\n    return __assign(__assign({}, acc), (_b = {}, _b[key] = deserializeAws_restJson1SlotHintsSlotMap(value, context), _b));\n  }, {});\n};\nvar deserializeAws_restJson1SlotHintsSlotMap = function (output, context) {\n  return Object.entries(output).reduce(function (acc, _a) {\n    var _b;\n    var _c = __read(_a, 2),\n      key = _c[0],\n      value = _c[1];\n    if (value === null) {\n      return acc;\n    }\n    return __assign(__assign({}, acc), (_b = {}, _b[key] = deserializeAws_restJson1RuntimeHintDetails(value, context), _b));\n  }, {});\n};\nvar deserializeAws_restJson1Slots = function (output, context) {\n  return Object.entries(output).reduce(function (acc, _a) {\n    var _b;\n    var _c = __read(_a, 2),\n      key = _c[0],\n      value = _c[1];\n    if (value === null) {\n      return acc;\n    }\n    return __assign(__assign({}, acc), (_b = {}, _b[key] = deserializeAws_restJson1Slot(value, context), _b));\n  }, {});\n};\nvar deserializeAws_restJson1StringList = function (output, context) {\n  var retVal = (output || []).filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n    return __expectString(entry);\n  });\n  return retVal;\n};\nvar deserializeAws_restJson1StringMap = function (output, context) {\n  return Object.entries(output).reduce(function (acc, _a) {\n    var _b;\n    var _c = __read(_a, 2),\n      key = _c[0],\n      value = _c[1];\n    if (value === null) {\n      return acc;\n    }\n    return __assign(__assign({}, acc), (_b = {}, _b[key] = __expectString(value), _b));\n  }, {});\n};\nvar deserializeAws_restJson1TextResponseEvent = function (output, context) {\n  return {\n    eventId: __expectString(output.eventId),\n    messages: output.messages != null ? deserializeAws_restJson1Messages(output.messages, context) : undefined\n  };\n};\nvar deserializeAws_restJson1TranscriptEvent = function (output, context) {\n  return {\n    eventId: __expectString(output.eventId),\n    transcript: __expectString(output.transcript)\n  };\n};\nvar deserializeAws_restJson1Value = function (output, context) {\n  return {\n    interpretedValue: __expectString(output.interpretedValue),\n    originalValue: __expectString(output.originalValue),\n    resolvedValues: output.resolvedValues != null ? deserializeAws_restJson1StringList(output.resolvedValues, context) : undefined\n  };\n};\nvar deserializeAws_restJson1Values = function (output, context) {\n  var retVal = (output || []).filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n    return deserializeAws_restJson1Slot(entry, context);\n  });\n  return retVal;\n};\nvar deserializeMetadata = function (output) {\n  var _a, _b;\n  return {\n    httpStatusCode: output.statusCode,\n    requestId: (_b = (_a = output.headers[\"x-amzn-requestid\"]) !== null && _a !== void 0 ? _a : output.headers[\"x-amzn-request-id\"]) !== null && _b !== void 0 ? _b : output.headers[\"x-amz-request-id\"],\n    extendedRequestId: output.headers[\"x-amz-id-2\"],\n    cfId: output.headers[\"x-amz-cf-id\"]\n  };\n};\nvar collectBody = function (streamBody, context) {\n  if (streamBody === void 0) {\n    streamBody = new Uint8Array();\n  }\n  if (streamBody instanceof Uint8Array) {\n    return Promise.resolve(streamBody);\n  }\n  return context.streamCollector(streamBody) || Promise.resolve(new Uint8Array());\n};\nvar collectBodyString = function (streamBody, context) {\n  return collectBody(streamBody, context).then(function (body) {\n    return context.utf8Encoder(body);\n  });\n};\nvar isSerializableHeaderValue = function (value) {\n  return value !== undefined && value !== null && value !== \"\" && (!Object.getOwnPropertyNames(value).includes(\"length\") || value.length != 0) && (!Object.getOwnPropertyNames(value).includes(\"size\") || value.size != 0);\n};\nvar parseBody = function (streamBody, context) {\n  return collectBodyString(streamBody, context).then(function (encoded) {\n    if (encoded.length) {\n      return JSON.parse(encoded);\n    }\n    return {};\n  });\n};\nvar parseErrorBody = function (errorBody, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var value;\n    var _a;\n    return __generator(this, function (_b) {\n      switch (_b.label) {\n        case 0:\n          return [4, parseBody(errorBody, context)];\n        case 1:\n          value = _b.sent();\n          value.message = (_a = value.message) !== null && _a !== void 0 ? _a : value.Message;\n          return [2, value];\n      }\n    });\n  });\n};\nvar loadRestJsonErrorCode = function (output, data) {\n  var findKey = function (object, key) {\n    return Object.keys(object).find(function (k) {\n      return k.toLowerCase() === key.toLowerCase();\n    });\n  };\n  var sanitizeErrorCode = function (rawValue) {\n    var cleanValue = rawValue;\n    if (typeof cleanValue === \"number\") {\n      cleanValue = cleanValue.toString();\n    }\n    if (cleanValue.indexOf(\",\") >= 0) {\n      cleanValue = cleanValue.split(\",\")[0];\n    }\n    if (cleanValue.indexOf(\":\") >= 0) {\n      cleanValue = cleanValue.split(\":\")[0];\n    }\n    if (cleanValue.indexOf(\"#\") >= 0) {\n      cleanValue = cleanValue.split(\"#\")[1];\n    }\n    return cleanValue;\n  };\n  var headerKey = findKey(output.headers, \"x-amzn-errortype\");\n  if (headerKey !== undefined) {\n    return sanitizeErrorCode(output.headers[headerKey]);\n  }\n  if (data.code !== undefined) {\n    return sanitizeErrorCode(data.code);\n  }\n  if (data[\"__type\"] !== undefined) {\n    return sanitizeErrorCode(data[\"__type\"]);\n  }\n};","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}