{"ast":null,"code":"import e from \"style-dictionary/lib/utils/deepExtend.js\";\nimport n from \"style-dictionary/lib/utils/flattenProperties.js\";\nimport { defaultTheme as t } from \"./defaultTheme.mjs\";\nimport { setupTokens as o, cssNameTransform as a, cssValue as i } from \"./utils.mjs\";\nconst r = ({\n  token: e,\n  path: n\n}) => {\n  const t = `--${a({\n      path: n\n    })}`,\n    {\n      value: o\n    } = e,\n    r = i(e);\n  return {\n    name: t,\n    original: o,\n    path: n,\n    value: r,\n    toString: () => `var(${t})`\n  };\n};\nfunction s(a, i = t) {\n  const s = e([{}, i, a]),\n    m = o({\n      tokens: s.tokens,\n      setupToken: r\n    }),\n    {\n      breakpoints: l,\n      name: p\n    } = s;\n  let d = `[data-amplify-theme=\"${p}\"] {\\n` + n(m).map(e => `${e.name}: ${e.value};`).join(\"\\n\") + \"\\n}\\n\",\n    $ = [];\n  return s.overrides && ($ = s.overrides.map(e => {\n    const t = o({\n        tokens: e.tokens,\n        setupToken: r\n      }),\n      a = n(t).map(e => `${e.name}: ${e.value};`).join(\"\\n\");\n    if (\"selector\" in e && (d += `\\n${e.selector} {\\n${a}\\n}\\n`), \"mediaQuery\" in e && (d += `\\n@media (${e.mediaQuery}) {\\n  [data-amplify-theme=\"${p}\"] {\\n    ${a}\\n  }\\n}\\n`), \"breakpoint\" in e) {\n      const n = s.breakpoints.values[e.breakpoint];\n      d += `\\n@media (min-width: ${n}px) {\\n  [data-amplify-theme=\"${p}\"] {\\n    ${a}\\n  }\\n}\\n`;\n    }\n    return \"colorMode\" in e && (d += `\\n@media (prefers-color-scheme: ${e.colorMode}) {\\n          [data-amplify-theme=\"${p}\"][data-amplify-color-mode=\"system\"] {\\n${a}\\n}\\n        }\\n`, d += `\\n[data-amplify-theme=\"${p}\"][data-amplify-color-mode=\"${e.colorMode}\"] {\\n${a}\\n}\\n`), Object.assign(Object.assign({}, e), {\n      tokens: t\n    });\n  })), {\n    tokens: m,\n    breakpoints: l,\n    name: p,\n    cssText: d,\n    overrides: $\n  };\n}\nexport { s as createTheme };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}