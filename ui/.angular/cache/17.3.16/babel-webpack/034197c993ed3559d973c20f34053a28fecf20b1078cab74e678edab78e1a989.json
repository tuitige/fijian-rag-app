{"ast":null,"code":"import { translate as e, DefaultTexts as t } from \"../../i18n/translations.mjs\";\nconst T = {\n    amazon: \"Amazon\",\n    apple: \"Apple\",\n    facebook: \"Facebook\",\n    google: \"Google\"\n  },\n  n = {\n    getBackToSignInText: () => e(t.BACK_SIGN_IN),\n    getChangePasswordText: () => e(t.CHANGE_PASSWORD),\n    getChangingText: () => e(t.CHANGING_PASSWORD),\n    getConfirmText: () => e(t.CONFIRM),\n    getConfirmingText: () => e(t.CONFIRMING),\n    getCopyText: () => e(t.UPPERCASE_COPY),\n    getHidePasswordText: () => e(t.HIDE_PASSWORD),\n    getLoadingText: () => e(t.LOADING),\n    getOrText: () => e(t.OR),\n    getResendCodeText: () => e(t.RESEND_CODE),\n    getSendCodeText: () => e(t.SEND_CODE),\n    getSendingText: () => e(t.SENDING),\n    getShowPasswordText: () => e(t.SHOW_PASSWORD),\n    getSubmitText: () => e(t.SUBMIT),\n    getSubmittingText: () => e(t.SUBMITTING),\n    getSignInTabText: () => e(t.SIGN_IN_TAB),\n    getSignUpTabText: () => e(t.CREATE_ACCOUNT),\n    getForgotPasswordText: T => e(T ? t.FORGOT_PASSWORD : t.FORGOT_YOUR_PASSWORD),\n    getSigningInText: () => e(t.SIGNING_IN_BUTTON),\n    getSignInText: () => e(t.SIGN_IN_BUTTON),\n    getCreatingAccountText: () => e(t.CREATING_ACCOUNT),\n    getCreateAccountText: () => e(t.CREATE_ACCOUNT),\n    getDeliveryMessageText: T => {\n      const {\n          DeliveryMedium: n,\n          Destination: g\n        } = null != T ? T : {},\n        S = \"EMAIL\" === n,\n        o = \"SMS\" === n,\n        i = e(t.CODE_ARRIVAL);\n      if (!S && !o) return `${e(t.CODE_SENT)}. ${i}.`;\n      return `${e(S ? t.CODE_EMAILED : t.CODE_TEXTED)} ${g}. ${i}.`;\n    },\n    getDeliveryMethodText: T => {\n      const {\n          DeliveryMedium: n\n        } = null != T ? T : {},\n        g = \"EMAIL\" === n;\n      return e(g || \"SMS\" !== n ? g ? t.WE_EMAILED : t.WE_TEXTED : t.WE_SENT_CODE);\n    },\n    getChallengeText: T => {\n      switch (T) {\n        case \"SMS_MFA\":\n          return e(t.CONFIRM_SMS);\n        case \"SOFTWARE_TOKEN_MFA\":\n          return e(t.CONFIRM_TOTP);\n        default:\n          throw new Error(`${e(\"Unexpected challengeName encountered in ConfirmSignIn:\")} ${T}`);\n      }\n    },\n    getResetYourPasswordText: () => e(t.RESET_PASSWORD),\n    getSetupTOTPText: () => e(t.SETUP_TOTP),\n    getSetupTOTPInstructionsText: () => e(\"Copy and paste the secret key below into an authenticator app and then enter the code in the text field below.\"),\n    getCopiedText: () => e(\"COPIED\"),\n    getSignInWithFederationText: (t, n) => e(`Sign ${\"signIn\" === t ? \"In\" : \"Up\"} with ${T[n]}`),\n    getSkipText: () => e(t.SKIP),\n    getVerifyText: () => e(t.VERIFY),\n    getVerifyContactText: () => e(t.VERIFY_CONTACT),\n    getAccountRecoveryInfoText: () => e(t.VERIFY_HEADING)\n  };\nexport { n as authenticatorTextUtil };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}