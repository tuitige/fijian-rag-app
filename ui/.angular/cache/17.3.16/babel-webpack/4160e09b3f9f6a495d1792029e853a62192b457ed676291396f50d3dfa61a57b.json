{"ast":null,"code":"import { __awaiter as t } from \"tslib\";\nimport { Hub as e } from \"aws-amplify\";\nimport { appendToCognitoUserAgent as n } from \"@aws-amplify/auth\";\nimport { waitFor as i } from \"xstate/lib/waitFor.js\";\nimport { ALLOWED_SPECIAL_CHARACTERS as a } from \"./constants.mjs\";\nimport { getActorState as o } from \"./actor.mjs\";\nimport { isFunction as s } from \"../../utils/index.mjs\";\nconst r = ({\n    packageName: t,\n    version: e\n  }) => {\n    n(`${t}/${e}`);\n  },\n  c = t => {\n    const e = t.trim().split(\"\");\n    for (let t = 0; t < e.length; t++) t > 0 && t < e.length - 1 && (e[t] = \"*\");\n    return e.join(\"\");\n  },\n  l = t => {\n    if (t.length < 4) return t;\n    const e = t.split(\"\");\n    for (let t = 0; t < e.length - 4; t++) e[t] = \"*\";\n    return e.join(\"\");\n  },\n  u = e => t(void 0, void 0, void 0, function* () {\n    try {\n      yield i(e, t => o(t).matches(\"autoSignIn\"));\n    } catch (t) {}\n  }),\n  m = ({\n    payload: {\n      data: e,\n      event: n\n    }\n  }, i, a) => t(void 0, void 0, void 0, function* () {\n    const {\n        send: t\n      } = i,\n      r = i.getSnapshot(),\n      {\n        onSignIn: c,\n        onSignOut: l\n      } = null != a ? a : {};\n    switch (n) {\n      case \"tokenRefresh\":\n        r.matches(\"authenticated.idle\") && t(\"TOKEN_REFRESH\");\n        break;\n      case \"autoSignIn\":\n        if (!r.matches(\"authenticated\")) {\n          yield u(i);\n          const n = o(i.getSnapshot());\n          (null == n ? void 0 : n.matches(\"autoSignIn\")) && t({\n            type: \"AUTO_SIGN_IN\",\n            data: e\n          });\n        }\n        break;\n      case \"autoSignIn_failure\":\n        {\n          yield u(i);\n          const n = o(i.getSnapshot());\n          (null == n ? void 0 : n.matches(\"autoSignIn\")) && t({\n            type: \"AUTO_SIGN_IN_FAILURE\",\n            data: e\n          });\n          break;\n        }\n      case \"signIn\":\n        s(c) && c();\n        break;\n      case \"signOut\":\n      case \"tokenRefresh_failure\":\n        s(l) && l(), r.matches(\"authenticated.idle\") && t(\"SIGN_OUT\");\n    }\n  }),\n  d = (t, n = m) => e.listen(\"auth\", ((t, e) => n => {\n    e(n, t);\n  })(t, n), \"authenticator-hub-handler\"),\n  h = t => a.some(e => t.includes(e)),\n  p = (t, e, n) => encodeURI(`otpauth://totp/${t}:${e}?secret=${n}&issuer=${t}`);\nfunction f(t, ...e) {\n  return Object.entries(t).reduce((t, [n, i]) => Object.assign(Object.assign({}, t), {\n    [n]: e.includes(n) ? i : null == i ? void 0 : i.trim()\n  }), {});\n}\nexport { c as censorAllButFirstAndLast, l as censorPhoneNumber, r as configureComponent, m as defaultAuthHubHandler, p as getTotpCodeURL, h as hasSpecialChars, d as listenToAuthHub, f as trimValues };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}