{"ast":null,"code":"// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n    return t;\n  };\n  return __assign.apply(this, arguments);\n};\nexport var parseMetadata = function (response) {\n  var _a, _b;\n  var headers = response.headers,\n    statusCode = response.statusCode;\n  return __assign(__assign({}, isMetadataBearer(response) ? response.$metadata : {}), {\n    httpStatusCode: statusCode,\n    requestId: (_b = (_a = headers['x-amzn-requestid']) !== null && _a !== void 0 ? _a : headers['x-amzn-request-id']) !== null && _b !== void 0 ? _b : headers['x-amz-request-id'],\n    extendedRequestId: headers['x-amz-id-2'],\n    cfId: headers['x-amz-cf-id']\n  });\n};\nvar isMetadataBearer = function (response) {\n  return typeof (response === null || response === void 0 ? void 0 : response['$metadata']) === 'object';\n};","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}