{"ast":null,"code":"// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { __assign, __awaiter, __generator } from \"tslib\";\nimport { Amplify, ConsoleLogger as Logger } from '@aws-amplify/core';\nimport InAppMessagingClass from './InAppMessaging';\nimport PushNotificationClass from './PushNotification';\nvar logger = new Logger('Notifications');\nvar NotificationsClass = /** @class */function () {\n  function NotificationsClass() {\n    var _this = this;\n    this.config = {};\n    /**\n     * Configure Notifications\n     * @param {Object} config - Notifications configuration object\n     */\n    this.configure = function (_a) {\n      var config = (_a === void 0 ? {} : _a).Notifications;\n      _this.config = __assign(__assign({}, _this.config), config);\n      logger.debug('configure Notifications', config);\n      // Configure sub-categories\n      _this.inAppMessaging.configure(_this.config.InAppMessaging);\n      if (_this.config.Push) {\n        try {\n          // only instantiate once\n          if (!_this.pushNotification) {\n            _this.pushNotification = new PushNotificationClass();\n          }\n          _this.pushNotification.configure(_this.config.Push);\n        } catch (err) {\n          logger.error(err);\n        }\n      }\n      return _this.config;\n    };\n    this.identifyUser = function (userId, userInfo) {\n      var identifyFunctions = [];\n      if (_this.inAppMessaging) {\n        identifyFunctions.push(_this.inAppMessaging.identifyUser);\n      }\n      if (_this.pushNotification) {\n        identifyFunctions.push(_this.pushNotification.identifyUser);\n      }\n      return Promise.all(identifyFunctions.map(function (identifyFunction) {\n        return __awaiter(_this, void 0, void 0, function () {\n          var err_1;\n          return __generator(this, function (_a) {\n            switch (_a.label) {\n              case 0:\n                _a.trys.push([0, 2,, 3]);\n                return [4 /*yield*/, identifyFunction(userId, userInfo)];\n              case 1:\n                _a.sent();\n                return [3 /*break*/, 3];\n              case 2:\n                err_1 = _a.sent();\n                logger.error('Failed to identify user', err_1);\n                throw err_1;\n              case 3:\n                return [2 /*return*/];\n            }\n          });\n        });\n      }));\n    };\n    this.inAppMessaging = new InAppMessagingClass();\n  }\n  /**\n   * Get the name of the module category\n   * @returns {string} name of the module category\n   */\n  NotificationsClass.prototype.getModuleName = function () {\n    return 'Notifications';\n  };\n  Object.defineProperty(NotificationsClass.prototype, \"InAppMessaging\", {\n    get: function () {\n      return this.inAppMessaging;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(NotificationsClass.prototype, \"Push\", {\n    get: function () {\n      var _a;\n      return (_a = this.pushNotification) !== null && _a !== void 0 ? _a : {};\n    },\n    enumerable: true,\n    configurable: true\n  });\n  return NotificationsClass;\n}();\nvar Notifications = new NotificationsClass();\nexport default Notifications;\nAmplify.register(Notifications);\n//# sourceMappingURL=Notifications.js.map","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}