{"ast":null,"code":"import { __values } from \"tslib\";\nexport var hasHeader = function (soughtHeader, headers) {\n  var e_1, _a;\n  soughtHeader = soughtHeader.toLowerCase();\n  try {\n    for (var _b = __values(Object.keys(headers)), _c = _b.next(); !_c.done; _c = _b.next()) {\n      var headerName = _c.value;\n      if (soughtHeader === headerName.toLowerCase()) {\n        return true;\n      }\n    }\n  } catch (e_1_1) {\n    e_1 = {\n      error: e_1_1\n    };\n  } finally {\n    try {\n      if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n    } finally {\n      if (e_1) throw e_1.error;\n    }\n  }\n  return false;\n};\nexport var getHeaderValue = function (soughtHeader, headers) {\n  var e_2, _a;\n  soughtHeader = soughtHeader.toLowerCase();\n  try {\n    for (var _b = __values(Object.keys(headers)), _c = _b.next(); !_c.done; _c = _b.next()) {\n      var headerName = _c.value;\n      if (soughtHeader === headerName.toLowerCase()) {\n        return headers[headerName];\n      }\n    }\n  } catch (e_2_1) {\n    e_2 = {\n      error: e_2_1\n    };\n  } finally {\n    try {\n      if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n    } finally {\n      if (e_2) throw e_2.error;\n    }\n  }\n  return undefined;\n};\nexport var deleteHeader = function (soughtHeader, headers) {\n  var e_3, _a;\n  soughtHeader = soughtHeader.toLowerCase();\n  try {\n    for (var _b = __values(Object.keys(headers)), _c = _b.next(); !_c.done; _c = _b.next()) {\n      var headerName = _c.value;\n      if (soughtHeader === headerName.toLowerCase()) {\n        delete headers[headerName];\n      }\n    }\n  } catch (e_3_1) {\n    e_3 = {\n      error: e_3_1\n    };\n  } finally {\n    try {\n      if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n    } finally {\n      if (e_3) throw e_3.error;\n    }\n  }\n};","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}