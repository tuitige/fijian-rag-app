{"ast":null,"code":"// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { getAmplifyUserAgent } from '@aws-amplify/core';\nimport { getDnsSuffix, jitteredBackoff, getRetryDecider } from '@aws-amplify/core/internals/aws-client-utils';\nimport { parseXmlError } from './utils';\nvar DOMAIN_PATTERN = /^[a-z0-9][a-z0-9\\.\\-]{1,61}[a-z0-9]$/;\nvar IP_ADDRESS_PATTERN = /(\\d+\\.){3}\\d+/;\nvar DOTS_PATTERN = /\\.\\./;\n/**\n * The service name used to sign requests if the API requires authentication.\n */\nexport var SERVICE_NAME = 's3';\n/**\n * The endpoint resolver function that returns the endpoint URL for a given region, and input parameters.\n */\nvar endpointResolver = function (options, apiInput) {\n  var region = options.region,\n    useAccelerateEndpoint = options.useAccelerateEndpoint,\n    customEndpoint = options.customEndpoint,\n    forcePathStyle = options.forcePathStyle;\n  var endpoint;\n  // 1. get base endpoint\n  if (customEndpoint) {\n    endpoint = new URL(customEndpoint);\n  } else if (useAccelerateEndpoint) {\n    if (forcePathStyle) {\n      throw new Error('Path style URLs are not supported with S3 Transfer Acceleration.');\n    }\n    endpoint = new URL(\"https://s3-accelerate.\".concat(getDnsSuffix(region)));\n  } else {\n    endpoint = new URL(\"https://s3.\".concat(region, \".\").concat(getDnsSuffix(region)));\n  }\n  // 2. inject bucket name\n  if (apiInput === null || apiInput === void 0 ? void 0 : apiInput.Bucket) {\n    if (!isDnsCompatibleBucketName(apiInput.Bucket)) {\n      throw new Error(\"Invalid bucket name: \\\"\".concat(apiInput.Bucket, \"\\\".\"));\n    }\n    if (forcePathStyle || apiInput.Bucket.includes('.')) {\n      endpoint.pathname = \"/\".concat(apiInput.Bucket);\n    } else {\n      endpoint.host = \"\".concat(apiInput.Bucket, \".\").concat(endpoint.host);\n    }\n  }\n  return {\n    url: endpoint\n  };\n};\n/**\n * Determines whether a given string is DNS compliant per the rules outlined by\n * S3. Length, capitaization, and leading dot restrictions are enforced by the\n * DOMAIN_PATTERN regular expression.\n * @internal\n *\n * @see https://github.com/aws/aws-sdk-js-v3/blob/f2da6182298d4d6b02e84fb723492c07c27469a8/packages/middleware-bucket-endpoint/src/bucketHostnameUtils.ts#L39-L48\n * @see https://docs.aws.amazon.com/AmazonS3/latest/dev/BucketRestrictions.html\n */\nexport var isDnsCompatibleBucketName = function (bucketName) {\n  return DOMAIN_PATTERN.test(bucketName) && !IP_ADDRESS_PATTERN.test(bucketName) && !DOTS_PATTERN.test(bucketName);\n};\n/**\n * @internal\n */\nexport var defaultConfig = {\n  service: SERVICE_NAME,\n  endpointResolver: endpointResolver,\n  retryDecider: getRetryDecider(parseXmlError),\n  computeDelay: jitteredBackoff,\n  userAgentValue: getAmplifyUserAgent(),\n  useAccelerateEndpoint: false,\n  uriEscapePath: false // Required by S3. See https://github.com/aws/aws-sdk-js-v3/blob/9ba012dfa3a3429aa2db0f90b3b0b3a7a31f9bc3/packages/signature-v4/src/SignatureV4.ts#L76-L83\n};","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}