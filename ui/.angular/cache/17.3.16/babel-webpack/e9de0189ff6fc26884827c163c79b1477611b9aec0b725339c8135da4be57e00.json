{"ast":null,"code":"import { __assign, __awaiter, __generator, __read, __spreadArray } from \"tslib\";\nimport { HttpRequest } from \"@aws-sdk/protocol-http\";\nimport { SPACE, UA_ESCAPE_REGEX, USER_AGENT, X_AMZ_USER_AGENT } from \"./constants\";\nexport var userAgentMiddleware = function (options) {\n  return function (next, context) {\n    return function (args) {\n      return __awaiter(void 0, void 0, void 0, function () {\n        var request, headers, userAgent, defaultUserAgent, customUserAgent, sdkUserAgentValue, normalUAValue;\n        var _a, _b;\n        return __generator(this, function (_c) {\n          switch (_c.label) {\n            case 0:\n              request = args.request;\n              if (!HttpRequest.isInstance(request)) return [2, next(args)];\n              headers = request.headers;\n              userAgent = ((_a = context === null || context === void 0 ? void 0 : context.userAgent) === null || _a === void 0 ? void 0 : _a.map(escapeUserAgent)) || [];\n              return [4, options.defaultUserAgentProvider()];\n            case 1:\n              defaultUserAgent = _c.sent().map(escapeUserAgent);\n              customUserAgent = ((_b = options === null || options === void 0 ? void 0 : options.customUserAgent) === null || _b === void 0 ? void 0 : _b.map(escapeUserAgent)) || [];\n              sdkUserAgentValue = __spreadArray(__spreadArray(__spreadArray([], __read(defaultUserAgent), false), __read(userAgent), false), __read(customUserAgent), false).join(SPACE);\n              normalUAValue = __spreadArray(__spreadArray([], __read(defaultUserAgent.filter(function (section) {\n                return section.startsWith(\"aws-sdk-\");\n              })), false), __read(customUserAgent), false).join(SPACE);\n              if (options.runtime !== \"browser\") {\n                if (normalUAValue) {\n                  headers[X_AMZ_USER_AGENT] = headers[X_AMZ_USER_AGENT] ? \"\".concat(headers[USER_AGENT], \" \").concat(normalUAValue) : normalUAValue;\n                }\n                headers[USER_AGENT] = sdkUserAgentValue;\n              } else {\n                headers[X_AMZ_USER_AGENT] = sdkUserAgentValue;\n              }\n              return [2, next(__assign(__assign({}, args), {\n                request: request\n              }))];\n          }\n        });\n      });\n    };\n  };\n};\nvar escapeUserAgent = function (_a) {\n  var _b = __read(_a, 2),\n    name = _b[0],\n    version = _b[1];\n  var prefixSeparatorIndex = name.indexOf(\"/\");\n  var prefix = name.substring(0, prefixSeparatorIndex);\n  var uaName = name.substring(prefixSeparatorIndex + 1);\n  if (prefix === \"api\") {\n    uaName = uaName.toLowerCase();\n  }\n  return [prefix, uaName, version].filter(function (item) {\n    return item && item.length > 0;\n  }).map(function (item) {\n    return item === null || item === void 0 ? void 0 : item.replace(UA_ESCAPE_REGEX, \"_\");\n  }).join(\"/\");\n};\nexport var getUserAgentMiddlewareOptions = {\n  name: \"getUserAgentMiddleware\",\n  step: \"build\",\n  priority: \"low\",\n  tags: [\"SET_USER_AGENT\", \"USER_AGENT\"],\n  override: true\n};\nexport var getUserAgentPlugin = function (config) {\n  return {\n    applyToStack: function (clientStack) {\n      clientStack.add(userAgentMiddleware(config), getUserAgentMiddlewareOptions);\n    }\n  };\n};","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}