{"ast":null,"code":"import { __extends } from \"tslib\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { Amplify } from '@aws-amplify/core';\nimport { InternalGraphQLAPIClass } from './internals';\nexport var graphqlOperation = function (query, variables, authToken) {\n  if (variables === void 0) {\n    variables = {};\n  }\n  return {\n    query: query,\n    variables: variables,\n    authToken: authToken\n  };\n};\n/**\n * Export Cloud Logic APIs\n */\nvar GraphQLAPIClass = /** @class */function (_super) {\n  __extends(GraphQLAPIClass, _super);\n  function GraphQLAPIClass() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  GraphQLAPIClass.prototype.getModuleName = function () {\n    return 'GraphQLAPI';\n  };\n  /**\n   * Executes a GraphQL operation\n   *\n   * @param options - GraphQL Options\n   * @param [additionalHeaders] - headers to merge in after any `graphql_headers` set in the config\n   * @returns An Observable if the query is a subscription query, else a promise of the graphql result.\n   */\n  GraphQLAPIClass.prototype.graphql = function (options, additionalHeaders) {\n    return _super.prototype.graphql.call(this, options, additionalHeaders);\n  };\n  return GraphQLAPIClass;\n}(InternalGraphQLAPIClass);\nexport { GraphQLAPIClass };\nexport var GraphQLAPI = new GraphQLAPIClass(null);\nAmplify.register(GraphQLAPI);","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}