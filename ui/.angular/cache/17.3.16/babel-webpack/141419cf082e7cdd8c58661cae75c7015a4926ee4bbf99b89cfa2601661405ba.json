{"ast":null,"code":"const t = t => {\n  var r;\n  const n = Object.assign({\n    default: void 0\n  }, t);\n  return null !== (r = n.default) && void 0 !== r ? r : n;\n};\nfunction r(t) {\n  return null != t && !Array.isArray(t) && \"object\" == typeof t;\n}\nfunction n(t) {\n  return \"string\" == typeof t || \"object\" == typeof t && \"[object String]\" === Object.prototype.toString.call(t);\n}\nfunction e(t) {\n  return r(t) && \"[object Map]\" === Object.prototype.toString.call(t);\n}\nfunction o(t) {\n  return r(t) && \"[object Set]\" === Object.prototype.toString.call(t);\n}\nfunction u(t) {\n  return void 0 === t;\n}\nfunction c(t) {\n  return null == t;\n}\nfunction i(t) {\n  if (null == t) return !0;\n  if (r(t) && (e(t) || o(t))) return !t.size;\n  if (r(t) && (n(t) || Array.isArray(t))) return !t.length;\n  for (const r in t) if (s(t, r)) return !1;\n  return !0;\n}\nfunction f(t) {\n  return Array.isArray(t) && i(t);\n}\nfunction l(...t) {\n  return t.every(f);\n}\nfunction a(t) {\n  return r(t) && i(t);\n}\nfunction p(...t) {\n  return t.every(a);\n}\nfunction y(t) {\n  return n(t) ? t.charAt(0).toUpperCase() + t.slice(1) : \"\";\n}\nfunction s(t, r) {\n  return null != t && Object.prototype.hasOwnProperty.call(t, r);\n}\nfunction b(t) {\n  return \"function\" == typeof t;\n}\nconst j = (t, r) => r ? `${t}--${r}` : \"\",\n  g = (t, r, n) => n ? `${t}--${r}` : \"\";\nexport { l as areEmptyArrays, p as areEmptyObjects, y as capitalize, j as classNameModifier, g as classNameModifierByFlag, s as has, i as isEmpty, b as isFunction, e as isMap, c as isNil, r as isObject, o as isSet, n as isString, u as isUndefined, t as sanitizeNamespaceImport };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}