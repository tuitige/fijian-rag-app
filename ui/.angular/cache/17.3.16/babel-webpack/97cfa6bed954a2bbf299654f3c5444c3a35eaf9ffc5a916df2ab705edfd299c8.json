{"ast":null,"code":"// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { __awaiter, __generator, __read, __spread } from \"tslib\";\nvar eventListeners = {};\nexport var notifyEventListeners = function (type) {\n  var args = [];\n  for (var _i = 1; _i < arguments.length; _i++) {\n    args[_i - 1] = arguments[_i];\n  }\n  var _a;\n  (_a = eventListeners[type]) === null || _a === void 0 ? void 0 : _a.forEach(function (listener) {\n    listener.handleEvent.apply(listener, __spread(args));\n  });\n};\nexport var notifyEventListenersAndAwaitHandlers = function (type) {\n  var args = [];\n  for (var _i = 1; _i < arguments.length; _i++) {\n    args[_i - 1] = arguments[_i];\n  }\n  var _a;\n  return Promise.all(Array.from((_a = eventListeners[type]) !== null && _a !== void 0 ? _a : []).map(function (listener) {\n    return __awaiter(void 0, void 0, void 0, function () {\n      var err_1;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            _a.trys.push([0, 2,, 3]);\n            return [4 /*yield*/, listener.handleEvent.apply(listener, __spread(args))];\n          case 1:\n            _a.sent();\n            return [3 /*break*/, 3];\n          case 2:\n            err_1 = _a.sent();\n            throw err_1;\n          case 3:\n            return [2 /*return*/];\n        }\n      });\n    });\n  }));\n};\nexport var addEventListener = function (type, handler) {\n  // If there is no listener set for the event type, just create it\n  if (!eventListeners[type]) {\n    eventListeners[type] = new Set();\n  }\n  var listener = {\n    handleEvent: handler,\n    remove: function () {\n      eventListeners[type].delete(listener);\n    }\n  };\n  eventListeners[type].add(listener);\n  return listener;\n};\n//# sourceMappingURL=index.js.map","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}