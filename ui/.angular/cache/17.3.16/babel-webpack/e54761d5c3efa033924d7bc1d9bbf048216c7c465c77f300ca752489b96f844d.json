{"ast":null,"code":"import { __awaiter, __generator } from \"tslib\";\nimport { memoize } from \"@aws-sdk/property-provider\";\nimport bowser from \"bowser\";\nimport { DEFAULTS_MODE_OPTIONS } from \"./constants\";\nexport var resolveDefaultsModeConfig = function (_a) {\n  var _b = _a === void 0 ? {} : _a,\n    defaultsMode = _b.defaultsMode;\n  return memoize(function () {\n    return __awaiter(void 0, void 0, void 0, function () {\n      var mode, _a;\n      return __generator(this, function (_b) {\n        switch (_b.label) {\n          case 0:\n            if (!(typeof defaultsMode === \"function\")) return [3, 2];\n            return [4, defaultsMode()];\n          case 1:\n            _a = _b.sent();\n            return [3, 3];\n          case 2:\n            _a = defaultsMode;\n            _b.label = 3;\n          case 3:\n            mode = _a;\n            switch (mode === null || mode === void 0 ? void 0 : mode.toLowerCase()) {\n              case \"auto\":\n                return [2, Promise.resolve(isMobileBrowser() ? \"mobile\" : \"standard\")];\n              case \"mobile\":\n              case \"in-region\":\n              case \"cross-region\":\n              case \"standard\":\n              case \"legacy\":\n                return [2, Promise.resolve(mode === null || mode === void 0 ? void 0 : mode.toLocaleLowerCase())];\n              case undefined:\n                return [2, Promise.resolve(\"legacy\")];\n              default:\n                throw new Error(\"Invalid parameter for \\\"defaultsMode\\\", expect \".concat(DEFAULTS_MODE_OPTIONS.join(\", \"), \", got \").concat(mode));\n            }\n            return [2];\n        }\n      });\n    });\n  });\n};\nvar isMobileBrowser = function () {\n  var _a, _b;\n  var parsedUA = typeof window !== \"undefined\" && ((_a = window === null || window === void 0 ? void 0 : window.navigator) === null || _a === void 0 ? void 0 : _a.userAgent) ? bowser.parse(window.navigator.userAgent) : undefined;\n  var platform = (_b = parsedUA === null || parsedUA === void 0 ? void 0 : parsedUA.platform) === null || _b === void 0 ? void 0 : _b.type;\n  return platform === \"tablet\" || platform === \"mobile\";\n};","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}