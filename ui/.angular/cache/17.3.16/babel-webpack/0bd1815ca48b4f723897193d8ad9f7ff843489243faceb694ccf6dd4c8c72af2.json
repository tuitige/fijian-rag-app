{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n    return t;\n  };\n  return __assign.apply(this, arguments);\n};\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport Cookies from 'universal-cookie';\nimport { browserOrNode } from '../JS';\nvar isBrowser = browserOrNode().isBrowser;\nvar ONE_YEAR_IN_MS = 365 * 24 * 60 * 60 * 1000;\nvar UniversalStorage = /** @class */function () {\n  function UniversalStorage(context) {\n    if (context === void 0) {\n      context = {};\n    }\n    this.cookies = new Cookies();\n    this.store = isBrowser ? window.localStorage : Object.create(null);\n    this.cookies = context.req ? new Cookies(decodeURIComponent(context.req.headers.cookie)) : new Cookies();\n    Object.assign(this.store, this.cookies.getAll());\n  }\n  Object.defineProperty(UniversalStorage.prototype, \"length\", {\n    get: function () {\n      return Object.entries(this.store).length;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  UniversalStorage.prototype.clear = function () {\n    var _this = this;\n    Array.from(new Array(this.length)).map(function (_, i) {\n      return _this.key(i);\n    }).forEach(function (key) {\n      return _this.removeItem(key);\n    });\n  };\n  UniversalStorage.prototype.getItem = function (key) {\n    return this.getLocalItem(key);\n  };\n  UniversalStorage.prototype.getLocalItem = function (key) {\n    return Object.prototype.hasOwnProperty.call(this.store, key) ? this.store[key] : null;\n  };\n  UniversalStorage.prototype.getUniversalItem = function (key) {\n    return this.cookies.get(key);\n  };\n  UniversalStorage.prototype.key = function (index) {\n    return Object.keys(this.store)[index];\n  };\n  UniversalStorage.prototype.removeItem = function (key) {\n    this.removeLocalItem(key);\n    this.removeUniversalItem(key);\n  };\n  UniversalStorage.prototype.removeLocalItem = function (key) {\n    delete this.store[key];\n  };\n  UniversalStorage.prototype.removeUniversalItem = function (key) {\n    this.cookies.remove(key, {\n      path: '/'\n    });\n  };\n  UniversalStorage.prototype.setItem = function (key, value) {\n    this.setLocalItem(key, value);\n    // keys take the shape:\n    //  1. `${ProviderPrefix}.${userPoolClientId}.${username}.${tokenType}\n    //  2. `${ProviderPrefix}.${userPoolClientId}.LastAuthUser\n    var tokenType = key.split('.').pop();\n    var sessionTokenTypes = ['LastAuthUser', 'accessToken',\n    // refreshToken originates on the client, but SSR pages won't fail when this expires\n    // Note: the new `accessToken` will also be refreshed on the client (since Amplify doesn't set server-side cookies)\n    'refreshToken',\n    // Required for CognitoUserSession\n    'idToken'\n    // userData is used when `Auth.currentAuthenticatedUser({ bypassCache: false })`.\n    // Can be persisted to speed up calls to `Auth.currentAuthenticatedUser()`\n    // 'userData',\n    // Ignoring clockDrift on the server for now, but needs testing\n    // 'clockDrift',\n    ];\n    if (sessionTokenTypes.includes(tokenType !== null && tokenType !== void 0 ? tokenType : '')) {\n      this.setUniversalItem(key, value, {\n        expires: new Date(Date.now() + ONE_YEAR_IN_MS)\n      });\n    }\n  };\n  UniversalStorage.prototype.setLocalItem = function (key, value) {\n    this.store[key] = value;\n  };\n  UniversalStorage.prototype.setUniversalItem = function (key, value, options) {\n    if (options === void 0) {\n      options = {};\n    }\n    this.cookies.set(key, value, __assign(__assign({}, options), {\n      path: '/',\n      // `httpOnly` cannot be set via JavaScript: https://developer.mozilla.org/en-US/docs/Web/HTTP/Cookies#JavaScript_access_using_Document.cookie\n      sameSite: true,\n      // Allow unsecure requests to http://localhost:3000/ when in development.\n      secure: isBrowser && window.location.hostname === 'localhost' ? false : true\n    }));\n  };\n  return UniversalStorage;\n}();\nexport { UniversalStorage };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}