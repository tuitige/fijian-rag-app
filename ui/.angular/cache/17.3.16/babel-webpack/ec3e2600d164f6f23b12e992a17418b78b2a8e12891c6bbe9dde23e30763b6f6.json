{"ast":null,"code":"// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { __awaiter, __generator } from \"tslib\";\nimport { gunzip, strFromU8 } from 'fflate';\nexport var convert = function (stream) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    return __generator(this, function (_a) {\n      if (stream instanceof Blob || stream instanceof ReadableStream) {\n        return [2 /*return*/, new Response(stream).arrayBuffer().then(function (buffer) {\n          return new Uint8Array(buffer);\n        })];\n      } else {\n        return [2 /*return*/, Promise.reject('Invalid content type')];\n      }\n      return [2 /*return*/];\n    });\n  });\n};\nexport var base64ToArrayBuffer = function (base64) {\n  return Uint8Array.from(window.atob(base64), function (c) {\n    return c.charCodeAt(0);\n  });\n};\nexport var gzipDecompressToString = function (data) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          return [4 /*yield*/, new Promise(function (resolve, reject) {\n            gunzip(data, function (err, resp) {\n              if (err) reject(err);else resolve(strFromU8(resp));\n            });\n          })];\n        case 1:\n          return [2 /*return*/, _a.sent()];\n      }\n    });\n  });\n};\n//# sourceMappingURL=utils.js.map","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}