{"ast":null,"code":"// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { getCredentialScope } from './getCredentialScope';\nimport { getFormattedDates } from './getFormattedDates';\n/**\n * Extracts common values used for signing both requests and urls.\n *\n * @param options `SignRequestOptions` object containing values used to construct the signature.\n * @returns Common `SigningValues` used for signing.\n *\n * @internal\n */\nexport var getSigningValues = function (_a) {\n  var credentials = _a.credentials,\n    _b = _a.signingDate,\n    signingDate = _b === void 0 ? new Date() : _b,\n    signingRegion = _a.signingRegion,\n    signingService = _a.signingService,\n    _c = _a.uriEscapePath,\n    uriEscapePath = _c === void 0 ? true : _c;\n  // get properties from credentials\n  var accessKeyId = credentials.accessKeyId,\n    secretAccessKey = credentials.secretAccessKey,\n    sessionToken = credentials.sessionToken;\n  // get formatted dates for signing\n  var _d = getFormattedDates(signingDate),\n    longDate = _d.longDate,\n    shortDate = _d.shortDate;\n  // copy header and set signing properties\n  var credentialScope = getCredentialScope(shortDate, signingRegion, signingService);\n  return {\n    accessKeyId: accessKeyId,\n    credentialScope: credentialScope,\n    longDate: longDate,\n    secretAccessKey: secretAccessKey,\n    sessionToken: sessionToken,\n    shortDate: shortDate,\n    signingRegion: signingRegion,\n    signingService: signingService,\n    uriEscapePath: uriEscapePath\n  };\n};","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}