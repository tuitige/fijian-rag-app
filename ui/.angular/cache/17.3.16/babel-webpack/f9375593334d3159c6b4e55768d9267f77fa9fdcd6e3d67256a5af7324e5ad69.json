{"ast":null,"code":"import { __extends, __read, __spreadArray } from \"tslib\";\nexport var StringWrapper = function () {\n  var Class = Object.getPrototypeOf(this).constructor;\n  var Constructor = Function.bind.apply(String, __spreadArray([null], __read(arguments), false));\n  var instance = new Constructor();\n  Object.setPrototypeOf(instance, Class.prototype);\n  return instance;\n};\nStringWrapper.prototype = Object.create(String.prototype, {\n  constructor: {\n    value: StringWrapper,\n    enumerable: false,\n    writable: true,\n    configurable: true\n  }\n});\nObject.setPrototypeOf(StringWrapper, String);\nvar LazyJsonString = function (_super) {\n  __extends(LazyJsonString, _super);\n  function LazyJsonString() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  LazyJsonString.prototype.deserializeJSON = function () {\n    return JSON.parse(_super.prototype.toString.call(this));\n  };\n  LazyJsonString.prototype.toJSON = function () {\n    return _super.prototype.toString.call(this);\n  };\n  LazyJsonString.fromObject = function (object) {\n    if (object instanceof LazyJsonString) {\n      return object;\n    } else if (object instanceof String || typeof object === \"string\") {\n      return new LazyJsonString(object);\n    }\n    return new LazyJsonString(JSON.stringify(object));\n  };\n  return LazyJsonString;\n}(StringWrapper);\nexport { LazyJsonString };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}