{"ast":null,"code":"import { __extends } from \"tslib\";\nimport { StartProjectVersionRequest, StartProjectVersionResponse } from \"../models/models_0\";\nimport { deserializeAws_json1_1StartProjectVersionCommand, serializeAws_json1_1StartProjectVersionCommand } from \"../protocols/Aws_json1_1\";\nimport { getSerdePlugin } from \"@aws-sdk/middleware-serde\";\nimport { Command as $Command } from \"@aws-sdk/smithy-client\";\n/**\n * <p>Starts the running of the version of a model. Starting a model takes a while\n *       to complete. To check the current state of the model, use <a>DescribeProjectVersions</a>.</p>\n *          <p>Once the model is running, you can detect custom labels in new images by calling\n *          <a>DetectCustomLabels</a>.</p>\n *          <note>\n *             <p>You are charged for the amount of time that the model is running. To stop a running\n *       model, call <a>StopProjectVersion</a>.</p>\n *          </note>\n *          <p>This operation requires permissions to perform the\n *          <code>rekognition:StartProjectVersion</code> action.</p>\n */\nvar StartProjectVersionCommand = /** @class */function (_super) {\n  __extends(StartProjectVersionCommand, _super);\n  // Start section: command_properties\n  // End section: command_properties\n  function StartProjectVersionCommand(input) {\n    var _this =\n    // Start section: command_constructor\n    _super.call(this) || this;\n    _this.input = input;\n    return _this;\n    // End section: command_constructor\n  }\n  /**\n   * @internal\n   */\n  StartProjectVersionCommand.prototype.resolveMiddleware = function (clientStack, configuration, options) {\n    this.middlewareStack.use(getSerdePlugin(configuration, this.serialize, this.deserialize));\n    var stack = clientStack.concat(this.middlewareStack);\n    var logger = configuration.logger;\n    var clientName = \"RekognitionClient\";\n    var commandName = \"StartProjectVersionCommand\";\n    var handlerExecutionContext = {\n      logger: logger,\n      clientName: clientName,\n      commandName: commandName,\n      inputFilterSensitiveLog: StartProjectVersionRequest.filterSensitiveLog,\n      outputFilterSensitiveLog: StartProjectVersionResponse.filterSensitiveLog\n    };\n    var requestHandler = configuration.requestHandler;\n    return stack.resolve(function (request) {\n      return requestHandler.handle(request.request, options || {});\n    }, handlerExecutionContext);\n  };\n  StartProjectVersionCommand.prototype.serialize = function (input, context) {\n    return serializeAws_json1_1StartProjectVersionCommand(input, context);\n  };\n  StartProjectVersionCommand.prototype.deserialize = function (output, context) {\n    return deserializeAws_json1_1StartProjectVersionCommand(output, context);\n  };\n  return StartProjectVersionCommand;\n}($Command);\nexport { StartProjectVersionCommand };\n//# sourceMappingURL=StartProjectVersionCommand.js.map","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}