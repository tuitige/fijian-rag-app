{"ast":null,"code":"// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { StorageHelper } from '@aws-amplify/core';\n/**\n * Default cache config\n */\nexport var defaultConfig = {\n  keyPrefix: 'aws-amplify-cache',\n  capacityInBytes: 1048576,\n  itemMaxSize: 210000,\n  defaultTTL: 259200000,\n  defaultPriority: 5,\n  warningThreshold: 0.8,\n  // the storage helper will check if localStorage exists,\n  // if not, will use a in-memory object instead\n  storage: new StorageHelper().getStorage()\n};\n/**\n * return the byte size of the string\n * @param str\n */\nexport function getByteLength(str) {\n  var ret = 0;\n  ret = str.length;\n  for (var i = str.length; i >= 0; i -= 1) {\n    var charCode = str.charCodeAt(i);\n    if (charCode > 0x7f && charCode <= 0x7ff) {\n      ret += 1;\n    } else if (charCode > 0x7ff && charCode <= 0xffff) {\n      ret += 2;\n    }\n    // trail surrogate\n    if (charCode >= 0xdc00 && charCode <= 0xdfff) {\n      i -= 1;\n    }\n  }\n  return ret;\n}\n/**\n * get current time\n */\nexport function getCurrTime() {\n  var currTime = new Date();\n  return currTime.getTime();\n}\n/**\n * check if passed value is an integer\n */\nexport function isInteger(value) {\n  if (Number.isInteger) {\n    return Number.isInteger(value);\n  }\n  return _isInteger(value);\n}\nfunction _isInteger(value) {\n  return typeof value === 'number' && isFinite(value) && Math.floor(value) === value;\n}\n/**\n * provide an object as the in-memory cache\n */\nvar store = {};\nvar CacheObject = /** @class */function () {\n  function CacheObject() {}\n  CacheObject.clear = function () {\n    store = {};\n  };\n  CacheObject.getItem = function (key) {\n    return store[key] || null;\n  };\n  CacheObject.setItem = function (key, value) {\n    store[key] = value;\n  };\n  CacheObject.removeItem = function (key) {\n    delete store[key];\n  };\n  return CacheObject;\n}();\nexport { CacheObject };\n//# sourceMappingURL=CacheUtils.js.map","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}